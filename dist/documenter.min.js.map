{"version":3,"sources":["webpack://documenter/webpack/universalModuleDefinition","webpack://documenter/webpack/bootstrap","webpack://documenter/external \"fs\"","webpack://documenter/./node_modules/@babel/runtime/regenerator/index.js","webpack://documenter/./node_modules/@babel/runtime/helpers/defineProperty.js","webpack://documenter/./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack://documenter/./node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack://documenter/./node_modules/commander/index.js","webpack://documenter/./node_modules/gen-readlines/index.js","webpack://documenter/./node_modules/@babel/runtime/helpers/asyncToGenerator.js","webpack://documenter/external \"events\"","webpack://documenter/external \"child_process\"","webpack://documenter/external \"path\"","webpack://documenter/external \"util\"","webpack://documenter/./node_modules/regenerator-runtime/runtime.js","webpack://documenter/./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack://documenter/./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack://documenter/./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","webpack://documenter/./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack://documenter/./node_modules/@7urtle/lambda/src/arity.js","webpack://documenter/./node_modules/@7urtle/lambda/src/conditional.js","webpack://documenter/./node_modules/@7urtle/lambda/src/utils.js","webpack://documenter/./node_modules/@7urtle/lambda/src/list.js","webpack://documenter/./node_modules/@7urtle/lambda/src/core.js","webpack://documenter/./node_modules/@7urtle/lambda/src/string.js","webpack://documenter/./node_modules/@7urtle/lambda/src/Case.js","webpack://documenter/./node_modules/@7urtle/lambda/src/Maybe.js","webpack://documenter/./node_modules/@7urtle/lambda/src/Either.js","webpack://documenter/./node_modules/@7urtle/lambda/src/SyncEffect.js","webpack://documenter/./node_modules/@7urtle/lambda/src/AsyncEffect.js","webpack://documenter/./node_modules/@7urtle/logger/src/index.js","webpack://documenter/./src/IOCommanderAsyncEffect.js","webpack://documenter/./src/CodeReaderAsyncEffect.js","webpack://documenter/./src/index.js","webpack://documenter/./src/DocumentationWriterAsyncEffect.js"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","obj","configurable","writable","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","arr","len","length","arr2","Array","EventEmitter","spawn","path","dirname","basename","fs","Option","flags","description","required","indexOf","optional","negate","split","test","short","shift","long","Command","commands","options","_execs","Set","_allowUnknownOption","_args","_name","_helpFlags","_helpDescription","_helpShortFlag","_helpLongFlag","pad","str","width","Math","max","join","outputHelpIfNecessary","cmd","outputHelp","process","exit","humanReadableArgName","arg","nameOutput","variadic","exists","file","statSync","isFile","e","incrementNodeInspectorPort","args","map","result","debugOption","match","debugHost","debugPort","parseInt","inherits","replace","attributeName","reduce","word","toUpperCase","slice","is","command","nameAndArgs","actionOptsOrExecDesc","execOpts","desc","opts","executables","add","isDefault","defaultExecutable","_noHelp","noHelp","_executableFile","executableFile","push","parseExpectedArgs","parent","arguments","addImplicitHelpCommand","self","forEach","argDetails","action","fn","listener","unknown","parsed","parseOptions","unknownOption","concat","missingArgument","variadicArgNotLast","splice","apply","on","_alias","option","defaultValue","oname","RegExp","regex","val","def","exec","undefined","allowUnknownOption","parse","argv","rawArgs","normalized","normalize","parseArgs","help","subCommand","find","alias","unshift","has","executeSubCommand","baseDir","isExplicitJS","pm","bin","extname","executableExt","resolvedLink","realpathSync","proc","localBin","platform","execArgv","stdio","customFds","execPath","signal","killed","exitCode","kill","err","code","console","error","runningCommand","lastOpt","index","opt","ret","optionFor","listeners","emit","filter","a","literal","unknownOptions","optionMissingArgument","_versionOptionName","_version","flag","version","versionOption","substr","stdout","write","argsDescription","_description","_argsDescription","Error","usage","_usage","prepareCommands","largestCommandLength","largestOptionLength","largestArgLength","padWidth","optionHelp","JSON","stringify","commandHelp","helpInformation","cmdName","parentCmdNames","parentCmd","cmds","cb","passthru","cbOutput","Buffer","isBuffer","helpOption","splitFlags","readlines","fd","filesize","bufferSize","position","lineBuffer","remaining","curbyte","readChunk","bytesRead","readSync","curpos","startpos","lastbyte","_concat","buffOne","buffTwo","newLength","fromFile","filename","openSync","fileSize","size","closeSync","asyncGeneratorStep","gen","resolve","reject","_next","_throw","info","done","Promise","then","runtime","Op","hasOwn","$Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","context","Context","_invoke","state","method","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","makeInvokeMethod","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","invoke","__await","unwrapped","TypeError","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","constructor","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","iter","toString","keys","reverse","pop","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function","arrayLikeToArray","isArray","from","minLen","nary","accumulator","current","isEqual","b","isNotEqual","isTrue","isTypeOf","typeOf","isString","isNull","isUndefined","isObject","isFunction","isLength","lengthOf","isNotLength","isEmpty","isNothing","passThrough","f","minusOneToUndefined","log","deepInspect","String","inspectArray","inspect","k","keysOf","inspectObject","inspectString","initial","reducer","list","reduceRight","mapper","checker","findIndex","separator","entries","every","end","start","some","functor","flatMap","ap1","ap2","ap","ap3","trim","includes","lastIndexOf","memory","string","limit","startsWith","substring","endsWith","search","count","repeat","replacement","x","Map","onJust","functorMaybe","onLeft","onRight","functorEither","isLeft","trigger","_","defaultConfiguration","levels","debug","warn","library","decorator","level","input","Date","toLocaleString","getLogger","configuration","fns","anything","v","compose","isDirectoryValid","argument","commander","AsyncEffect","of","isDirectory","IOCommanderAsyncEffect","output","states","getNameFromLine","line","contents","processLineNameState","processLineCodeState","newDocumentationBlock","positionToWhiteSpaceOrStringLength","processTextOrTag","tagContents","getTagContents","tag","toLowerCase","tags","getTag","processLineTextState","getDocumentationLineContents","concatContentItem","label","processedLines","newData","processLine","example","mergeDocumentationContents","Case","FileLinesGeneratorSyncEffect","SyncEffect","existsSync","processOneFile","documentation","item","logger","createLogger","files","readdirSync","getJSFilesInADirectoryAsyncEffect","configurationWithFiles","writeFile"],"mappings":";CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,GACe,iBAAZC,QACdA,QAAoB,WAAID,IAExBD,EAAiB,WAAIC,IARvB,CASGK,MAAM,WACT,O,YCTE,IAAIC,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUP,QAGnC,IAAIC,EAASI,EAAiBE,GAAY,CACzCC,EAAGD,EACHE,GAAG,EACHT,QAAS,IAUV,OANAU,EAAQH,GAAUI,KAAKV,EAAOD,QAASC,EAAQA,EAAOD,QAASM,GAG/DL,EAAOQ,GAAI,EAGJR,EAAOD,QA0Df,OArDAM,EAAoBM,EAAIF,EAGxBJ,EAAoBO,EAAIR,EAGxBC,EAAoBQ,EAAI,SAASd,EAASe,EAAMC,GAC3CV,EAAoBW,EAAEjB,EAASe,IAClCG,OAAOC,eAAenB,EAASe,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEV,EAAoBgB,EAAI,SAAStB,GACX,oBAAXuB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAenB,EAASuB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAenB,EAAS,aAAc,CAAEyB,OAAO,KAQvDnB,EAAoBoB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQnB,EAAoBmB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFAxB,EAAoBgB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOnB,EAAoBQ,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRvB,EAAoB2B,EAAI,SAAShC,GAChC,IAAIe,EAASf,GAAUA,EAAO2B,WAC7B,WAAwB,OAAO3B,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAK,EAAoBQ,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRV,EAAoBW,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG7B,EAAoBgC,EAAI,GAIjBhC,EAAoBA,EAAoBiC,EAAI,I,gBClFrDtC,EAAOD,QAAUwC,QAAQ,O,gBCAzBvC,EAAOD,QAAU,EAAQ,K,cCezBC,EAAOD,QAfP,SAAyByC,EAAKV,EAAKN,GAYjC,OAXIM,KAAOU,EACTvB,OAAOC,eAAesB,EAAKV,EAAK,CAC9BN,MAAOA,EACPL,YAAY,EACZsB,cAAc,EACdC,UAAU,IAGZF,EAAIV,GAAON,EAGNgB,I,gBCZT,IAAIG,EAAoB,EAAQ,IAE5BC,EAAkB,EAAQ,IAE1BC,EAA6B,EAAQ,IAErCC,EAAoB,EAAQ,IAMhC9C,EAAOD,QAJP,SAA4BgD,GAC1B,OAAOJ,EAAkBI,IAAQH,EAAgBG,IAAQF,EAA2BE,IAAQD,M,cCC9F9C,EAAOD,QAVP,SAA2BgD,EAAKC,IACnB,MAAPA,GAAeA,EAAMD,EAAIE,UAAQD,EAAMD,EAAIE,QAE/C,IAAK,IAAI1C,EAAI,EAAG2C,EAAO,IAAIC,MAAMH,GAAMzC,EAAIyC,EAAKzC,IAC9C2C,EAAK3C,GAAKwC,EAAIxC,GAGhB,OAAO2C,I,gBCHT,IAAIE,EAAe,EAAQ,GAAUA,aACjCC,EAAQ,EAAQ,GAAiBA,MACjCC,EAAO,EAAQ,IACfC,EAAUD,EAAKC,QACfC,EAAWF,EAAKE,SAChBC,EAAK,EAAQ,GAkCjB,SAASC,EAAOC,EAAOC,GACrBzD,KAAKwD,MAAQA,EACbxD,KAAK0D,SAAWF,EAAMG,QAAQ,MAAQ,EACtC3D,KAAK4D,SAAWJ,EAAMG,QAAQ,MAAQ,EACtC3D,KAAK6D,QAAoC,IAA3BL,EAAMG,QAAQ,SAC5BH,EAAQA,EAAMM,MAAM,WACVhB,OAAS,IAAM,QAAQiB,KAAKP,EAAM,MAAKxD,KAAKgE,MAAQR,EAAMS,SACpEjE,KAAKkE,KAAOV,EAAMS,QAClBjE,KAAKyD,YAAcA,GAAe,GA6CpC,SAASU,EAAQxD,GACfX,KAAKoE,SAAW,GAChBpE,KAAKqE,QAAU,GACfrE,KAAKsE,OAAS,IAAIC,IAClBvE,KAAKwE,qBAAsB,EAC3BxE,KAAKyE,MAAQ,GACbzE,KAAK0E,MAAQ/D,GAAQ,GAErBX,KAAK2E,WAAa,aAClB3E,KAAK4E,iBAAmB,2BACxB5E,KAAK6E,eAAiB,KACtB7E,KAAK8E,cAAgB,SAymCvB,SAASC,EAAIC,EAAKC,GAChB,IAAIpC,EAAMqC,KAAKC,IAAI,EAAGF,EAAQD,EAAIlC,QAClC,OAAOkC,EAAMhC,MAAMH,EAAM,GAAGuC,KAAK,KAWnC,SAASC,EAAsBC,EAAKjB,GAClCA,EAAUA,GAAW,GAErB,IAAK,IAAIjE,EAAI,EAAGA,EAAIiE,EAAQvB,OAAQ1C,IAC9BiE,EAAQjE,KAAOkF,EAAIR,eAAiBT,EAAQjE,KAAOkF,EAAIT,iBACzDS,EAAIC,aACJC,QAAQC,KAAK,IAanB,SAASC,EAAqBC,GAC5B,IAAIC,EAAaD,EAAIhF,OAAyB,IAAjBgF,EAAIE,SAAoB,MAAQ,IAE7D,OAAOF,EAAIjC,SACP,IAAMkC,EAAa,IACnB,IAAMA,EAAa,IAIzB,SAASE,EAAOC,GACd,IACE,GAAIzC,EAAG0C,SAASD,GAAME,SACpB,OAAO,EAET,MAAOC,GACP,OAAO,GAYX,SAASC,EAA2BC,GAKlC,OAAOA,EAAKC,IAAKV,IACf,IAAIW,EAASX,EACb,GAAiC,IAA7BA,EAAIhC,QAAQ,aAAoB,CAClC,IAAI4C,EAGAC,EAFAC,EAAY,YACZC,EAAY,OAEoC,QAA/CF,EAAQb,EAAIa,MAAM,yBAErBD,EAAcC,EAAM,GACmD,QAA7DA,EAAQb,EAAIa,MAAM,wCAC5BD,EAAcC,EAAM,GAChB,QAAQzC,KAAKyC,EAAM,IAErBE,EAAYF,EAAM,GAGlBC,EAAYD,EAAM,IAEyD,QAAnEA,EAAQb,EAAIa,MAAM,+CAE5BD,EAAcC,EAAM,GACpBC,EAAYD,EAAM,GAClBE,EAAYF,EAAM,IAGhBD,GAA6B,MAAdG,IACjBJ,EAAS,GAAGC,KAAeE,KAAaE,SAASD,GAAa,KAGlE,OAAOJ,IAnyCX,EAAQ,IAAQM,SAASzC,EAASlB,IAMlCrD,EAAUC,EAAOD,QAAU,IAAIuE,GAMvBA,QAAUA,EAMlBvE,EAAQ2D,OAASA,EA4BjBA,EAAOvB,UAAUrB,KAAO,WACtB,OAAOX,KAAKkE,KAAK2C,QAAQ,MAAO,KAWlCtD,EAAOvB,UAAU8E,cAAgB,WAC/B,OAAiB9G,KAAKW,OAAOkG,QAAQ,OAAQ,IA4nCjC/C,MAAM,KAAKiD,QAAO,SAAS/B,EAAKgC,GAC1C,OAAOhC,EAAMgC,EAAK,GAAGC,cAAgBD,EAAKE,MAAM,OAlnCpD3D,EAAOvB,UAAUmF,GAAK,SAASxB,GAC7B,OAAO3F,KAAKgE,QAAU2B,GAAO3F,KAAKkE,OAASyB,GAmD7CxB,EAAQnC,UAAUoF,QAAU,SAASC,EAAaC,EAAsBC,GACtE,IAAIC,EAAOF,EACPG,EAAOF,EACS,iBAATC,GAA8B,OAATA,IAC9BC,EAAOD,EACPA,EAAO,MAETC,EAAOA,GAAQ,GACf,IAAIrB,EAAOiB,EAAYvD,MAAM,MACzBwB,EAAM,IAAInB,EAAQiC,EAAKnC,SAkB3B,OAhBIuD,IACFlC,EAAI7B,YAAY+D,GAChBxH,KAAK0H,aAAc,EACnB1H,KAAKsE,OAAOqD,IAAIrC,EAAIZ,OAChB+C,EAAKG,YAAW5H,KAAK6H,kBAAoBvC,EAAIZ,QAEnDY,EAAIwC,UAAYL,EAAKM,OACrBzC,EAAIX,WAAa3E,KAAK2E,WACtBW,EAAIV,iBAAmB5E,KAAK4E,iBAC5BU,EAAIT,eAAiB7E,KAAK6E,eAC1BS,EAAIR,cAAgB9E,KAAK8E,cACzBQ,EAAI0C,gBAAkBP,EAAKQ,eAC3BjI,KAAKoE,SAAS8D,KAAK5C,GACnBA,EAAI6C,kBAAkB/B,GACtBd,EAAI8C,OAASpI,KAETwH,EAAaxH,KACVsF,GASTnB,EAAQnC,UAAUqG,UAAY,SAASb,GACrC,OAAOxH,KAAKmI,kBAAkBX,EAAK1D,MAAM,QAU3CK,EAAQnC,UAAUsG,uBAAyB,WACzCtI,KAAKoH,QAAQ,aAAc,2BAa7BjD,EAAQnC,UAAUmG,kBAAoB,SAAS/B,GAC7C,GAAKA,EAAKtD,OAAV,CACA,IAAIyF,EAAOvI,KA0BX,OAzBAoG,EAAKoC,SAAQ,SAAS7C,GACpB,IAAI8C,EAAa,CACf/E,UAAU,EACV/C,KAAM,GACNkF,UAAU,GAGZ,OAAQF,EAAI,IACV,IAAK,IACH8C,EAAW/E,UAAW,EACtB+E,EAAW9H,KAAOgF,EAAIuB,MAAM,GAAI,GAChC,MACF,IAAK,IACHuB,EAAW9H,KAAOgF,EAAIuB,MAAM,GAAI,GAIhCuB,EAAW9H,KAAKmC,OAAS,GAAmC,QAA9B2F,EAAW9H,KAAKuG,OAAO,KACvDuB,EAAW5C,UAAW,EACtB4C,EAAW9H,KAAO8H,EAAW9H,KAAKuG,MAAM,GAAI,IAE1CuB,EAAW9H,MACb4H,EAAK9D,MAAMyD,KAAKO,MAGbzI,OAoBTmE,EAAQnC,UAAU0G,OAAS,SAASC,GAClC,IAAIJ,EAAOvI,KACP4I,EAAW,SAASxC,EAAMyC,GAE5BzC,EAAOA,GAAQ,GACfyC,EAAUA,GAAW,GAErB,IAAIC,EAASP,EAAKQ,aAAaF,GAG/BxD,EAAsBkD,EAAMO,EAAOD,SAK/BC,EAAOD,QAAQ/F,OAAS,GAC1ByF,EAAKS,cAAcF,EAAOD,QAAQ,IAIhCC,EAAO1C,KAAKtD,SAAQsD,EAAO0C,EAAO1C,KAAK6C,OAAO7C,IAElDmC,EAAK9D,MAAM+D,SAAQ,SAAS7C,EAAKvF,GAC3BuF,EAAIjC,UAAuB,MAAX0C,EAAKhG,GACvBmI,EAAKW,gBAAgBvD,EAAIhF,MAChBgF,EAAIE,WACTzF,IAAMmI,EAAK9D,MAAM3B,OAAS,GAC5ByF,EAAKY,mBAAmBxD,EAAIhF,MAG9ByF,EAAKhG,GAAKgG,EAAKgD,OAAOhJ,OAOtBmI,EAAK9D,MAAM3B,OACbsD,EAAKmC,EAAK9D,MAAM3B,QAAUyF,EAE1BnC,EAAK8B,KAAKK,GAGZI,EAAGU,MAAMd,EAAMnC,IAEbgC,EAASpI,KAAKoI,QAAUpI,KACxBW,EAAOyH,IAAWpI,KAAO,IAAMA,KAAK0E,MAGxC,OAFA0D,EAAOkB,GAAG,WAAa3I,EAAMiI,GACzB5I,KAAKuJ,QAAQnB,EAAOkB,GAAG,WAAatJ,KAAKuJ,OAAQX,GAC9C5I,MAuDTmE,EAAQnC,UAAUwH,OAAS,SAAShG,EAAOC,EAAakF,EAAIc,GAC1D,IAAIlB,EAAOvI,KACTwJ,EAAS,IAAIjG,EAAOC,EAAOC,GAC3BiG,EAAQF,EAAO7I,OACfA,EAAO6I,EAAO1C,gBAGhB,GAAkB,mBAAP6B,EACT,GAAIA,aAAcgB,OAAQ,CAGxB,IAAIC,EAAQjB,EACZA,EAAK,SAASkB,EAAKC,GACjB,IAAItJ,EAAIoJ,EAAMG,KAAKF,GACnB,OAAOrJ,EAAIA,EAAE,GAAKsJ,QAGpBL,EAAed,EACfA,EAAK,KAKT,GAAIa,EAAO3F,QAAU2F,EAAO5F,UAAY4F,EAAO9F,UAAoC,kBAAjB+F,EAA4B,CAE5F,GAAID,EAAO3F,OAAQ,CACjB,IAAI4D,EAAOc,EAAKd,OAChBgC,GAAe3I,OAAOkB,UAAUC,eAAe1B,KAAKkH,EAAM9G,IAAQ8G,EAAK9G,QAGpDqJ,IAAjBP,IACFlB,EAAK5H,GAAQ8I,EACbD,EAAOC,aAAeA,GA+B1B,OA1BAzJ,KAAKqE,QAAQ6D,KAAKsB,GAIlBxJ,KAAKsJ,GAAG,UAAYI,GAAO,SAASG,GAEtB,OAARA,GAAgBlB,IAClBkB,EAAMlB,EAAGkB,OAAoBG,IAAfzB,EAAK5H,GAAsB8I,EAAelB,EAAK5H,KAIrC,kBAAf4H,EAAK5H,SAA6C,IAAf4H,EAAK5H,GAG/C4H,EAAK5H,GADI,MAAPkJ,GACWL,EAAO3F,SAEhB4F,IAAgB,GAEPI,EAEE,OAARA,IAETtB,EAAK5H,IAAQ6I,EAAO3F,QAAiBgG,MAIlC7J,MAUTmE,EAAQnC,UAAUiI,mBAAqB,SAAStE,GAE9C,OADA3F,KAAKwE,oBAA2C,IAArB6D,UAAUvF,QAAgB6C,EAC9C3F,MAWTmE,EAAQnC,UAAUkI,MAAQ,SAASC,GAE7BnK,KAAK0H,aAAa1H,KAAKsI,yBAG3BtI,KAAKoK,QAAUD,EAGfnK,KAAK0E,MAAQ1E,KAAK0E,OAASrB,EAAS8G,EAAK,GAAI,OAGzCnK,KAAK0H,aAAeyC,EAAKrH,OAAS,IAAM9C,KAAK6H,mBAE/CsC,EAAKjC,KAAKlI,KAAK8E,eAIjB,IAAIuF,EAAarK,KAAKsK,UAAUH,EAAKjD,MAAM,IACvC4B,EAAS9I,KAAK+I,aAAasB,GAC3BjE,EAAOpG,KAAKoG,KAAO0C,EAAO1C,KAE1BE,EAAStG,KAAKuK,UAAUvK,KAAKoG,KAAM0C,EAAOD,SAE9B,SAAZzC,EAAK,IAAiC,IAAhBA,EAAKtD,QAAc9C,KAAKwK,OAGlC,SAAZpE,EAAK,KACPA,EAAK,GAAKA,EAAK,GACfA,EAAK,GAAKpG,KAAK8E,eAKjB,IAAInE,EAAO2F,EAAOF,KAAK,GACnBqE,EAAa,KA6BjB,OA1BI9J,IACF8J,EAAazK,KAAKoE,SAASsG,MAAK,SAAStD,GACvC,OAAOA,EAAQ1C,QAAU/D,OAKxB8J,GAAc9J,IACjB8J,EAAazK,KAAKoE,SAASsG,MAAK,SAAStD,GACvC,OAAOA,EAAQuD,UAAYhK,QAG3BA,EAAO8J,EAAW/F,MAClB0B,EAAK,GAAKzF,IAKT8J,GAAczK,KAAK6H,oBACtBlH,EAAOX,KAAK6H,kBACZzB,EAAKwE,QAAQjK,GACb8J,EAAazK,KAAKoE,SAASsG,MAAK,SAAStD,GACvC,OAAOA,EAAQ1C,QAAU/D,MAIzBX,KAAKsE,OAAOuG,IAAIlK,GACXX,KAAK8K,kBAAkBX,EAAM/D,EAAM0C,EAAOD,QAAS4B,EAAaA,EAAWzC,qBAAkBgC,GAG/F1D,GAaTnC,EAAQnC,UAAU8I,kBAAoB,SAASX,EAAM/D,EAAMyC,EAASZ,IAClE7B,EAAOA,EAAK6C,OAAOJ,IAET/F,QAAQ9C,KAAKwK,OAEvB,IAeIO,EAfAC,GAAe,EAGfC,EAAKd,EAAK,GAEVe,EAAM7H,EAAS4H,EAAI9H,EAAKgI,QAAQF,IAAO,IAAM7E,EAAK,GACtD,GAAsB,MAAlB6B,EAAwB,CAC1BiD,EAAMjD,EAEN,IAAImD,EAAgBjI,EAAKgI,QAAQlD,GACjC+C,EAAiC,QAAlBI,GAA6C,QAAlBA,GAA6C,SAAlBA,EAOvE,IAAIC,EAAe/H,EAAGgI,aAAaL,GAEnCF,EAAU3H,EAAQiI,GAGlB,IAkBIE,EAlBAC,EAAWrI,EAAKiC,KAAK2F,EAASG,GAG9BpF,EAAO0F,EAAW,QACpBN,EAAMM,EAAW,MACjBR,GAAe,GACNlF,EAAO0F,EAAW,QAC3BN,EAAMM,EAAW,MACjBR,GAAe,GACNlF,EAAO0F,EAAW,SAC3BN,EAAMM,EAAW,OACjBR,GAAe,GACNlF,EAAO0F,KAChBN,EAAMM,GAGRpF,EAAOA,EAAKc,MAAM,GAGO,UAArB1B,QAAQiG,SACNT,GACF5E,EAAKwE,QAAQM,GAEb9E,EAAOD,EAA2BX,QAAQkG,UAAUzC,OAAO7C,GAE3DmF,EAAOrI,EAAMsC,QAAQ2E,KAAK,GAAI/D,EAAM,CAAEuF,MAAO,UAAWC,UAAW,CAAC,EAAG,EAAG,MAE1EL,EAAOrI,EAAMgI,EAAK9E,EAAM,CAAEuF,MAAO,UAAWC,UAAW,CAAC,EAAG,EAAG,MAGhExF,EAAKwE,QAAQM,GAEb9E,EAAOD,EAA2BX,QAAQkG,UAAUzC,OAAO7C,GAC3DmF,EAAOrI,EAAMsC,QAAQqG,SAAUzF,EAAM,CAAEuF,MAAO,aAGlC,CAAC,UAAW,UAAW,UAAW,SAAU,UAClDnD,SAAQ,SAASsD,GACvBtG,QAAQ8D,GAAGwC,GAAQ,YACG,IAAhBP,EAAKQ,QAAsC,OAAlBR,EAAKS,UAChCT,EAAKU,KAAKH,SAIhBP,EAAKjC,GAAG,QAAS9D,QAAQC,KAAK7D,KAAK4D,UACnC+F,EAAKjC,GAAG,SAAS,SAAS4C,GACP,WAAbA,EAAIC,KACNC,QAAQC,MAAM,0CAA2CnB,GACnC,WAAbgB,EAAIC,MACbC,QAAQC,MAAM,0DAA2DnB,GAE3E1F,QAAQC,KAAK,MAIfzF,KAAKsM,eAAiBf,GAaxBpH,EAAQnC,UAAUsI,UAAY,SAASlE,GAQrC,IAPA,IACET,EACA4G,EACAC,EACAxI,EACAyI,EALEC,EAAM,GAODtM,EAAI,EAAGyC,EAAMuD,EAAKtD,OAAQ1C,EAAIyC,IAAOzC,EAAG,CAM/C,GALAuF,EAAMS,EAAKhG,GACPA,EAAI,IACNmM,EAAUvM,KAAK2M,UAAUvG,EAAKhG,EAAI,KAGxB,OAARuF,EAAc,CAEhB+G,EAAMA,EAAIzD,OAAO7C,EAAKc,MAAM9G,IAC5B,MACSmM,GAAWA,EAAQ7I,SAC5BgJ,EAAIxE,KAAKvC,GACAA,EAAI7C,OAAS,GAAgB,MAAX6C,EAAI,IAAyB,MAAXA,EAAI,IACjD3B,EAAQ2B,EAAIuB,MAAM,EAAG,IACrBuF,EAAMzM,KAAK2M,UAAU3I,MACTyI,EAAI/I,UAAY+I,EAAI7I,WAC9B8I,EAAIxE,KAAKlE,GACT0I,EAAIxE,KAAKvC,EAAIuB,MAAM,KAEnBvB,EAAIuB,MAAM,GAAGpD,MAAM,IAAI0E,SAAQ,SAAS/H,GACtCiM,EAAIxE,KAAK,IAAMzH,OAGV,MAAMsD,KAAK4B,MAAU6G,EAAQ7G,EAAIhC,QAAQ,MAClD+I,EAAIxE,KAAKvC,EAAIuB,MAAM,EAAGsF,GAAQ7G,EAAIuB,MAAMsF,EAAQ,IAEhDE,EAAIxE,KAAKvC,GAIb,OAAO+G,GAeTvI,EAAQnC,UAAUuI,UAAY,SAASnE,EAAMyC,GAC3C,IAAIlI,EAuBJ,OArBIyF,EAAKtD,QACPnC,EAAOyF,EAAK,GACRpG,KAAK4M,UAAU,WAAajM,GAAMmC,OACpC9C,KAAK6M,KAAK,WAAazG,EAAKnC,QAASmC,EAAMyC,GAE3C7I,KAAK6M,KAAK,YAAazG,KAGzBf,EAAsBrF,KAAM6I,GAIxBA,EAAQ/F,OAAS,GACnB9C,KAAKgJ,cAAcH,EAAQ,IAEA,IAAzB7I,KAAKoE,SAAStB,QACmD,IAAjE9C,KAAKyE,MAAMqI,QAAO,SAASC,GAAK,OAAOA,EAAErJ,YAAaZ,QACxD9C,KAAK6M,KAAK,cAIP7M,MAWTmE,EAAQnC,UAAU2K,UAAY,SAAShH,GACrC,IAAK,IAAIvF,EAAI,EAAGyC,EAAM7C,KAAKqE,QAAQvB,OAAQ1C,EAAIyC,IAAOzC,EACpD,GAAIJ,KAAKqE,QAAQjE,GAAG+G,GAAGxB,GACrB,OAAO3F,KAAKqE,QAAQjE,IAc1B+D,EAAQnC,UAAU+G,aAAe,SAASoB,GAUxC,IATA,IAEE6C,EACAxD,EACA7D,EAJES,EAAO,GACTvD,EAAMsH,EAAKrH,OAKTmK,EAAiB,GAGZ7M,EAAI,EAAGA,EAAIyC,IAAOzC,EAIzB,GAHAuF,EAAMwE,EAAK/J,GAGP4M,EACF5G,EAAK8B,KAAKvC,QAIZ,GAAY,OAARA,EASJ,GAHA6D,EAASxJ,KAAK2M,UAAUhH,GAKtB,GAAI6D,EAAO9F,SAAU,CAEnB,GAAW,OADXiC,EAAMwE,IAAO/J,IACI,OAAOJ,KAAKkN,sBAAsB1D,GACnDxJ,KAAK6M,KAAK,UAAYrD,EAAO7I,OAAQgF,QAE5B6D,EAAO5F,UAEL,OADX+B,EAAMwE,EAAK/J,EAAI,KACgB,MAAXuF,EAAI,IAAsB,MAARA,EACpCA,EAAM,OAEJvF,EAEJJ,KAAK6M,KAAK,UAAYrD,EAAO7I,OAAQgF,IAGrC3F,KAAK6M,KAAK,UAAYrD,EAAO7I,aAM7BgF,EAAI7C,OAAS,GAAgB,MAAX6C,EAAI,IACxBsH,EAAe/E,KAAKvC,GAKfvF,EAAI,EAAK+J,EAAKrH,SAA8B,MAAnBqH,EAAK/J,EAAI,GAAG,IAA8B,MAAhB+J,EAAK/J,EAAI,KAC/D6M,EAAe/E,KAAKiC,IAAO/J,KAM/BgG,EAAK8B,KAAKvC,QA5CRqH,GAAU,EA+Cd,MAAO,CAAE5G,KAAMA,EAAMyC,QAASoE,IAShC9I,EAAQnC,UAAUyF,KAAO,WAIvB,IAHA,IAAInB,EAAS,GACXzD,EAAM7C,KAAKqE,QAAQvB,OAEZ1C,EAAI,EAAGA,EAAIyC,EAAKzC,IAAK,CAC5B,IAAIuB,EAAM3B,KAAKqE,QAAQjE,GAAG0G,gBAC1BR,EAAO3E,GAAOA,IAAQ3B,KAAKmN,mBAAqBnN,KAAKoN,SAAWpN,KAAK2B,GAEvE,OAAO2E,GAUTnC,EAAQnC,UAAUkH,gBAAkB,SAASvI,GAC3CyL,QAAQC,MAAM,wCAAyC1L,GACvD6E,QAAQC,KAAK,IAWftB,EAAQnC,UAAUkL,sBAAwB,SAAS1D,EAAQ6D,GACrDA,EACFjB,QAAQC,MAAM,gDAAiD7C,EAAOhG,MAAO6J,GAE7EjB,QAAQC,MAAM,sCAAuC7C,EAAOhG,OAE9DgC,QAAQC,KAAK,IAUftB,EAAQnC,UAAUgH,cAAgB,SAASqE,GACrCrN,KAAKwE,sBACT4H,QAAQC,MAAM,6BAA8BgB,GAC5C7H,QAAQC,KAAK,KAUftB,EAAQnC,UAAUmH,mBAAqB,SAASxI,GAC9CyL,QAAQC,MAAM,8CAA+C1L,GAC7D6E,QAAQC,KAAK,IAkBftB,EAAQnC,UAAUsL,QAAU,SAAStI,EAAKxB,EAAOC,GAC/C,GAAyB,IAArB4E,UAAUvF,OAAc,OAAO9C,KAAKoN,SACxCpN,KAAKoN,SAAWpI,EAGhB,IAAIuI,EAAgB,IAAIhK,EAFxBC,EAAQA,GAAS,gBACjBC,EAAcA,GAAe,6BAQ7B,OANAzD,KAAKmN,mBAAqBI,EAAcrJ,KAAKsJ,OAAO,IAAM,UAC1DxN,KAAKqE,QAAQ6D,KAAKqF,GAClBvN,KAAKsJ,GAAG,UAAYtJ,KAAKmN,oBAAoB,WAC3C3H,QAAQiI,OAAOC,MAAM1I,EAAM,MAC3BQ,QAAQC,KAAK,MAERzF,MAYTmE,EAAQnC,UAAUyB,YAAc,SAASuB,EAAK2I,GAC5C,OAAyB,IAArBtF,UAAUvF,OAAqB9C,KAAK4N,cACxC5N,KAAK4N,aAAe5I,EACpBhF,KAAK6N,iBAAmBF,EACjB3N,OAWTmE,EAAQnC,UAAU2I,MAAQ,SAASA,GACjC,IAAIvD,EAAUpH,KAKd,GAJ6B,IAAzBA,KAAKoE,SAAStB,SAChBsE,EAAUpH,KAAKoE,SAASpE,KAAKoE,SAAStB,OAAS,IAGxB,IAArBuF,UAAUvF,OAAc,OAAOsE,EAAQmC,OAE3C,GAAIoB,IAAUvD,EAAQ1C,MAAO,MAAM,IAAIoJ,MAAM,+CAG7C,OADA1G,EAAQmC,OAASoB,EACV3K,MAWTmE,EAAQnC,UAAU+L,MAAQ,SAAS/I,GACjC,IAAIoB,EAAOpG,KAAKyE,MAAM4B,KAAI,SAASV,GACjC,OAAOD,EAAqBC,MAG1BoI,EAAQ,aACT/N,KAAKoE,SAAStB,OAAS,aAAe,KACtC9C,KAAKyE,MAAM3B,OAAS,IAAMsD,EAAKhB,KAAK,KAAO,IAE9C,OAAyB,IAArBiD,UAAUvF,OAAqB9C,KAAKgO,QAAUD,GAClD/N,KAAKgO,OAAShJ,EAEPhF,OAWTmE,EAAQnC,UAAUrB,KAAO,SAASqE,GAChC,OAAyB,IAArBqD,UAAUvF,OAAqB9C,KAAK0E,OACxC1E,KAAK0E,MAAQM,EACNhF,OAUTmE,EAAQnC,UAAUiM,gBAAkB,WAClC,OAAOjO,KAAKoE,SAAS0I,QAAO,SAASxH,GACnC,OAAQA,EAAIwC,WACXzB,KAAI,SAASf,GACd,IAAIc,EAAOd,EAAIb,MAAM4B,KAAI,SAASV,GAChC,OAAOD,EAAqBC,MAC3BP,KAAK,KAER,MAAO,CACLE,EAAIZ,OACDY,EAAIiE,OAAS,IAAMjE,EAAIiE,OAAS,KAChCjE,EAAIjB,QAAQvB,OAAS,aAAe,KACpCsD,EAAO,IAAMA,EAAO,IACvBd,EAAIsI,kBAYVzJ,EAAQnC,UAAUkM,qBAAuB,WAEvC,OADelO,KAAKiO,kBACJlH,QAAO,SAAS5B,EAAKiC,GACnC,OAAOlC,KAAKC,IAAIA,EAAKiC,EAAQ,GAAGtE,UAC/B,IAULqB,EAAQnC,UAAUmM,oBAAsB,WACtC,IAAI9J,EAAU,GAAG6C,MAAM3G,KAAKP,KAAKqE,SAKjC,OAJAA,EAAQ6D,KAAK,CACX1E,MAAOxD,KAAK2E,aAGPN,EAAQ0C,QAAO,SAAS5B,EAAKqE,GAClC,OAAOtE,KAAKC,IAAIA,EAAKqE,EAAOhG,MAAMV,UACjC,IAULqB,EAAQnC,UAAUoM,iBAAmB,WACnC,OAAOpO,KAAKyE,MAAMsC,QAAO,SAAS5B,EAAKQ,GACrC,OAAOT,KAAKC,IAAIA,EAAKQ,EAAIhF,KAAKmC,UAC7B,IAULqB,EAAQnC,UAAUqM,SAAW,WAC3B,IAAIpJ,EAAQjF,KAAKmO,sBAajB,OAZInO,KAAK6N,kBAAoB7N,KAAKyE,MAAM3B,QAClC9C,KAAKoO,mBAAqBnJ,IAC5BA,EAAQjF,KAAKoO,oBAIbpO,KAAKoE,UAAYpE,KAAKoE,SAAStB,QAC7B9C,KAAKkO,uBAAyBjJ,IAChCA,EAAQjF,KAAKkO,wBAIVjJ,GAUTd,EAAQnC,UAAUsM,WAAa,WAC7B,IAAIrJ,EAAQjF,KAAKqO,WAGjB,OAAOrO,KAAKqE,QAAQgC,KAAI,SAASmD,GAC/B,OAAOzE,EAAIyE,EAAOhG,MAAOyB,GAAS,KAAOuE,EAAO/F,aAC3C+F,EAAO3F,aAAkCmG,IAAxBR,EAAOC,aAA0F,GAA5D,cAAgB8E,KAAKC,UAAUhF,EAAOC,cAAgB,QAChHR,OAAO,CAAClE,EAAI/E,KAAK2E,WAAYM,GAAS,KAAOjF,KAAK4E,mBAClDQ,KAAK,OAUVjB,EAAQnC,UAAUyM,YAAc,WAC9B,IAAKzO,KAAKoE,SAAStB,OAAQ,MAAO,GAElC,IAAIsB,EAAWpE,KAAKiO,kBAChBhJ,EAAQjF,KAAKqO,WAEjB,MAAO,CACL,YACAjK,EAASiC,KAAI,SAASf,GACpB,IAAIkC,EAAOlC,EAAI,GAAK,KAAOA,EAAI,GAAK,GACpC,OAAQkC,EAAOzC,EAAIO,EAAI,GAAIL,GAASK,EAAI,IAAMkC,KAC7CpC,KAAK,MAAMyB,QAAQ,MAAO,MAC7B,IACAzB,KAAK,OAUTjB,EAAQnC,UAAU0M,gBAAkB,WAClC,IAAIlH,EAAO,GACX,GAAIxH,KAAK4N,aAAc,CACrBpG,EAAO,CACLxH,KAAK4N,aACL,IAGF,IAAID,EAAkB3N,KAAK6N,iBAC3B,GAAIF,GAAmB3N,KAAKyE,MAAM3B,OAAQ,CACxC,IAAImC,EAAQjF,KAAKqO,WACjB7G,EAAKU,KAAK,cACVV,EAAKU,KAAK,IACVlI,KAAKyE,MAAM+D,SAAQ,SAAS7C,GAC1B6B,EAAKU,KAAK,KAAOnD,EAAIY,EAAIhF,KAAMsE,GAAS,KAAO0I,EAAgBhI,EAAIhF,UAErE6G,EAAKU,KAAK,KAId,IAAIyG,EAAU3O,KAAK0E,MACf1E,KAAKuJ,SACPoF,EAAUA,EAAU,IAAM3O,KAAKuJ,QAGjC,IADA,IAAIqF,EAAiB,GACZC,EAAY7O,KAAKoI,OAAQyG,EAAWA,EAAYA,EAAUzG,OACjEwG,EAAiBC,EAAUlO,OAAS,IAAMiO,EAE5C,IAAIb,EAAQ,CACV,UAAYa,EAAiBD,EAAU,IAAM3O,KAAK+N,QAClD,IAGEe,EAAO,GACPL,EAAczO,KAAKyO,cACnBA,IAAaK,EAAO,CAACL,IAEzB,IAAIpK,EAAU,CACZ,WACA,GAAKrE,KAAKsO,aAAazH,QAAQ,MAAO,MACtC,IAGF,OAAOkH,EACJ9E,OAAOzB,GACPyB,OAAO5E,GACP4E,OAAO6F,GACP1J,KAAK,OAYVjB,EAAQnC,UAAUuD,WAAa,SAASwJ,GACjCA,IACHA,EAAK,SAASC,GACZ,OAAOA,IAGX,MAAMC,EAAWF,EAAG/O,KAAK0O,mBACzB,GAAwB,iBAAbO,IAA0BC,OAAOC,SAASF,GACnD,MAAM,IAAInB,MAAM,wDAElBtI,QAAQiI,OAAOC,MAAMuB,GACrBjP,KAAK6M,KAAK7M,KAAK8E,gBAajBX,EAAQnC,UAAUoN,WAAa,SAAS5L,EAAOC,GAC7CzD,KAAK2E,WAAanB,GAASxD,KAAK2E,WAChC3E,KAAK4E,iBAAmBnB,GAAezD,KAAK4E,iBAE5C,IAAIyK,EAAarP,KAAK2E,WAAWb,MAAM,UAMvC,OAJIuL,EAAWvM,OAAS,IAAG9C,KAAK6E,eAAiBwK,EAAWpL,SAE5DjE,KAAK8E,cAAgBuK,EAAWpL,QAEzBjE,MAUTmE,EAAQnC,UAAUwI,KAAO,SAASuE,GAChC/O,KAAKuF,WAAWwJ,GAChBvJ,QAAQC,S,6BCxrCV,MAAMnC,EAAK,EAAQ,GAcnB,SAAUgM,EAAUC,EAAIC,EAAUC,EAAYC,GAI5C,IAAIC,EAEJ,SAL0B,IAAfF,IAA4BA,EAAa,YAC5B,IAAbC,IAA0BA,EAAW,GAIzCA,EAAWF,GAAU,CAC1B,IAAII,EAAYJ,EAAWE,EACvBE,EAAYH,IAAYA,EAAaG,GAEzC,IAMIC,EANAC,EAAY,IAAIZ,OAAOO,GACvBM,EAAYzM,EAAG0M,SAAST,EAAIO,EAAW,EAAGL,EAAYC,GAEtDO,EAAS,EACTC,EAAW,EACXC,EAAW,KAEf,KAAOF,EAASF,GACdF,EAAUC,EAAUG,GA9Bf,KAgCDJ,GA/BC,KA+BiBM,GA/BjB,KA+BoCN,GAAkBI,EAASF,EAAY,SACxEK,EAAQT,EAAYG,EAAU5I,MAAMgJ,EAAUD,IAEpDN,OAAa3F,EACbkG,EAAWD,EAAS,EAnCjB,KAqCCJ,GAtCD,KAsCmBC,EAAUG,EAAS,KACvCC,IACAD,MAvCC,KAyCMJ,GAAkBI,GAAUF,EAAY,IACjDI,EAAWN,GAGbI,IAGFP,GAAYK,EAERG,EAAWH,IACbJ,EAAaS,EAAQT,EAAYG,EAAU5I,MAAMgJ,EAAUH,KAI3Db,OAAOC,SAASQ,WAAmBA,GAUzC,SAASS,EAAQC,EAASC,GACxB,IAAKD,EAAS,OAAOC,EACrB,IAAKA,EAAS,OAAOD,EAErB,IAAIE,EAAYF,EAAQvN,OAASwN,EAAQxN,OACzC,OAAOoM,OAAOjG,OAAO,CAACoH,EAASC,GAAUC,GAkB3C1Q,EAAOD,QAAU0P,EAEjBzP,EAAOD,QAAQ4Q,SAXf,UAAmBC,GACjB,MAAMlB,EAAKjM,EAAGoN,SAASD,EAAU,KAC3BE,EAAWrN,EAAG0C,SAASyK,GAAUG,WAEhCtB,EAAUC,EAAIoB,GAErBrN,EAAGuN,UAAUtB,K,cC1Ff,SAASuB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQxP,EAAKgE,GACpE,IACE,IAAIyL,EAAOL,EAAIpP,GAAKgE,GAChBtE,EAAQ+P,EAAK/P,MACjB,MAAOgL,GAEP,YADA4E,EAAO5E,GAIL+E,EAAKC,KACPL,EAAQ3P,GAERiQ,QAAQN,QAAQ3P,GAAOkQ,KAAKL,EAAOC,GAwBvCtR,EAAOD,QApBP,SAA2B+I,GACzB,OAAO,WACL,IAAIJ,EAAOvI,KACPoG,EAAOiC,UACX,OAAO,IAAIiJ,SAAQ,SAAUN,EAASC,GACpC,IAAIF,EAAMpI,EAAGU,MAAMd,EAAMnC,GAEzB,SAAS8K,EAAM7P,GACbyP,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQ9P,GAGlE,SAAS8P,EAAOjF,GACd4E,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASjF,GAGnEgF,OAAMlH,S,cC/BZnK,EAAOD,QAAUwC,QAAQ,W,cCAzBvC,EAAOD,QAAUwC,QAAQ,kB,cCAzBvC,EAAOD,QAAUwC,QAAQ,S,cCAzBvC,EAAOD,QAAUwC,QAAQ,S,gBCOzB,IAAIoP,EAAW,SAAU5R,GACvB,aAEA,IAAI6R,EAAK3Q,OAAOkB,UACZ0P,EAASD,EAAGxP,eAEZ0P,EAA4B,mBAAXxQ,OAAwBA,OAAS,GAClDyQ,EAAiBD,EAAQE,UAAY,aACrCC,EAAsBH,EAAQI,eAAiB,kBAC/CC,EAAoBL,EAAQvQ,aAAe,gBAE/C,SAAStB,EAAOuC,EAAKV,EAAKN,GAOxB,OANAP,OAAOC,eAAesB,EAAKV,EAAK,CAC9BN,MAAOA,EACPL,YAAY,EACZsB,cAAc,EACdC,UAAU,IAELF,EAAIV,GAEb,IAEE7B,EAAO,GAAI,IACX,MAAOoM,GACPpM,EAAS,SAASuC,EAAKV,EAAKN,GAC1B,OAAOgB,EAAIV,GAAON,GAItB,SAAS4Q,EAAKC,EAASC,EAAS5J,EAAM6J,GAEpC,IAAIC,EAAiBF,GAAWA,EAAQnQ,qBAAqBsQ,EAAYH,EAAUG,EAC/EC,EAAYzR,OAAOY,OAAO2Q,EAAerQ,WACzCwQ,EAAU,IAAIC,EAAQL,GAAe,IAMzC,OAFAG,EAAUG,QAsMZ,SAA0BR,EAAS3J,EAAMiK,GACvC,IAAIG,EA/KuB,iBAiL3B,OAAO,SAAgBC,EAAQjN,GAC7B,GAhLoB,cAgLhBgN,EACF,MAAM,IAAI7E,MAAM,gCAGlB,GAnLoB,cAmLhB6E,EAA6B,CAC/B,GAAe,UAAXC,EACF,MAAMjN,EAKR,OAAOkN,IAMT,IAHAL,EAAQI,OAASA,EACjBJ,EAAQ7M,IAAMA,IAED,CACX,IAAImN,EAAWN,EAAQM,SACvB,GAAIA,EAAU,CACZ,IAAIC,EAAiBC,EAAoBF,EAAUN,GACnD,GAAIO,EAAgB,CAClB,GAAIA,IAAmBE,EAAkB,SACzC,OAAOF,GAIX,GAAuB,SAAnBP,EAAQI,OAGVJ,EAAQU,KAAOV,EAAQW,MAAQX,EAAQ7M,SAElC,GAAuB,UAAnB6M,EAAQI,OAAoB,CACrC,GAnNqB,mBAmNjBD,EAEF,MADAA,EAjNc,YAkNRH,EAAQ7M,IAGhB6M,EAAQY,kBAAkBZ,EAAQ7M,SAEN,WAAnB6M,EAAQI,QACjBJ,EAAQa,OAAO,SAAUb,EAAQ7M,KAGnCgN,EA5NkB,YA8NlB,IAAIW,EAASC,EAASrB,EAAS3J,EAAMiK,GACrC,GAAoB,WAAhBc,EAAOE,KAAmB,CAO5B,GAJAb,EAAQH,EAAQnB,KAjOA,YAFK,iBAuOjBiC,EAAO3N,MAAQsN,EACjB,SAGF,MAAO,CACL5R,MAAOiS,EAAO3N,IACd0L,KAAMmB,EAAQnB,MAGS,UAAhBiC,EAAOE,OAChBb,EA/OgB,YAkPhBH,EAAQI,OAAS,QACjBJ,EAAQ7M,IAAM2N,EAAO3N,OA9QP8N,CAAiBvB,EAAS3J,EAAMiK,GAE7CD,EAcT,SAASgB,EAAS5K,EAAItG,EAAKsD,GACzB,IACE,MAAO,CAAE6N,KAAM,SAAU7N,IAAKgD,EAAGpI,KAAK8B,EAAKsD,IAC3C,MAAOuG,GACP,MAAO,CAAEsH,KAAM,QAAS7N,IAAKuG,IAhBjCtM,EAAQqS,KAAOA,EAoBf,IAOIgB,EAAmB,GAMvB,SAASX,KACT,SAASoB,KACT,SAASC,KAIT,IAAIC,EAAoB,GACxBA,EAAkBhC,GAAkB,WAClC,OAAO5R,MAGT,IAAI6T,EAAW/S,OAAOgT,eAClBC,EAA0BF,GAAYA,EAASA,EAASG,EAAO,MAC/DD,GACAA,IAA4BtC,GAC5BC,EAAOnR,KAAKwT,EAAyBnC,KAGvCgC,EAAoBG,GAGtB,IAAIE,EAAKN,EAA2B3R,UAClCsQ,EAAUtQ,UAAYlB,OAAOY,OAAOkS,GAWtC,SAASM,EAAsBlS,GAC7B,CAAC,OAAQ,QAAS,UAAUwG,SAAQ,SAASoK,GAC3C9S,EAAOkC,EAAW4Q,GAAQ,SAASjN,GACjC,OAAO3F,KAAK0S,QAAQE,EAAQjN,SAkClC,SAASwO,EAAc5B,EAAW6B,GAgChC,IAAIC,EAgCJrU,KAAK0S,QA9BL,SAAiBE,EAAQjN,GACvB,SAAS2O,IACP,OAAO,IAAIF,GAAY,SAASpD,EAASC,IAnC7C,SAASsD,EAAO3B,EAAQjN,EAAKqL,EAASC,GACpC,IAAIqC,EAASC,EAAShB,EAAUK,GAASL,EAAW5M,GACpD,GAAoB,UAAhB2N,EAAOE,KAEJ,CACL,IAAIlN,EAASgN,EAAO3N,IAChBtE,EAAQiF,EAAOjF,MACnB,OAAIA,GACiB,iBAAVA,GACPqQ,EAAOnR,KAAKc,EAAO,WACd+S,EAAYpD,QAAQ3P,EAAMmT,SAASjD,MAAK,SAASlQ,GACtDkT,EAAO,OAAQlT,EAAO2P,EAASC,MAC9B,SAAS/E,GACVqI,EAAO,QAASrI,EAAK8E,EAASC,MAI3BmD,EAAYpD,QAAQ3P,GAAOkQ,MAAK,SAASkD,GAI9CnO,EAAOjF,MAAQoT,EACfzD,EAAQ1K,MACP,SAAS+F,GAGV,OAAOkI,EAAO,QAASlI,EAAO2E,EAASC,MAvBzCA,EAAOqC,EAAO3N,KAiCZ4O,CAAO3B,EAAQjN,EAAKqL,EAASC,MAIjC,OAAOoD,EAaLA,EAAkBA,EAAgB9C,KAChC+C,EAGAA,GACEA,KAkHV,SAAStB,EAAoBF,EAAUN,GACrC,IAAII,EAASE,EAASjB,SAASW,EAAQI,QACvC,QA1TE5I,IA0TE4I,EAAsB,CAKxB,GAFAJ,EAAQM,SAAW,KAEI,UAAnBN,EAAQI,OAAoB,CAE9B,GAAIE,EAASjB,SAAiB,SAG5BW,EAAQI,OAAS,SACjBJ,EAAQ7M,SArUZqE,EAsUIgJ,EAAoBF,EAAUN,GAEP,UAAnBA,EAAQI,QAGV,OAAOK,EAIXT,EAAQI,OAAS,QACjBJ,EAAQ7M,IAAM,IAAI+O,UAChB,kDAGJ,OAAOzB,EAGT,IAAIK,EAASC,EAASX,EAAQE,EAASjB,SAAUW,EAAQ7M,KAEzD,GAAoB,UAAhB2N,EAAOE,KAIT,OAHAhB,EAAQI,OAAS,QACjBJ,EAAQ7M,IAAM2N,EAAO3N,IACrB6M,EAAQM,SAAW,KACZG,EAGT,IAAI7B,EAAOkC,EAAO3N,IAElB,OAAMyL,EAOFA,EAAKC,MAGPmB,EAAQM,EAAS6B,YAAcvD,EAAK/P,MAGpCmR,EAAQoC,KAAO9B,EAAS+B,QAQD,WAAnBrC,EAAQI,SACVJ,EAAQI,OAAS,OACjBJ,EAAQ7M,SAzXVqE,GAmYFwI,EAAQM,SAAW,KACZG,GANE7B,GA3BPoB,EAAQI,OAAS,QACjBJ,EAAQ7M,IAAM,IAAI+O,UAAU,oCAC5BlC,EAAQM,SAAW,KACZG,GAoDX,SAAS6B,EAAaC,GACpB,IAAIC,EAAQ,CAAEC,OAAQF,EAAK,IAEvB,KAAKA,IACPC,EAAME,SAAWH,EAAK,IAGpB,KAAKA,IACPC,EAAMG,WAAaJ,EAAK,GACxBC,EAAMI,SAAWL,EAAK,IAGxB/U,KAAKqV,WAAWnN,KAAK8M,GAGvB,SAASM,EAAcN,GACrB,IAAI1B,EAAS0B,EAAMO,YAAc,GACjCjC,EAAOE,KAAO,gBACPF,EAAO3N,IACdqP,EAAMO,WAAajC,EAGrB,SAASb,EAAQL,GAIfpS,KAAKqV,WAAa,CAAC,CAAEJ,OAAQ,SAC7B7C,EAAY5J,QAAQsM,EAAc9U,MAClCA,KAAKwV,OAAM,GA8Bb,SAASxB,EAAOyB,GACd,GAAIA,EAAU,CACZ,IAAIC,EAAiBD,EAAS7D,GAC9B,GAAI8D,EACF,OAAOA,EAAenV,KAAKkV,GAG7B,GAA6B,mBAAlBA,EAASb,KAClB,OAAOa,EAGT,IAAKE,MAAMF,EAAS3S,QAAS,CAC3B,IAAI1C,GAAK,EAAGwU,EAAO,SAASA,IAC1B,OAASxU,EAAIqV,EAAS3S,QACpB,GAAI4O,EAAOnR,KAAKkV,EAAUrV,GAGxB,OAFAwU,EAAKvT,MAAQoU,EAASrV,GACtBwU,EAAKvD,MAAO,EACLuD,EAOX,OAHAA,EAAKvT,WAzeT2I,EA0eI4K,EAAKvD,MAAO,EAELuD,GAGT,OAAOA,EAAKA,KAAOA,GAKvB,MAAO,CAAEA,KAAM/B,GAIjB,SAASA,IACP,MAAO,CAAExR,WAzfP2I,EAyfyBqH,MAAM,GA+MnC,OA5mBAqC,EAAkB1R,UAAYiS,EAAG2B,YAAcjC,EAC/CA,EAA2BiC,YAAclC,EACzCA,EAAkBmC,YAAc/V,EAC9B6T,EACA3B,EACA,qBAaFpS,EAAQkW,oBAAsB,SAASC,GACrC,IAAIC,EAAyB,mBAAXD,GAAyBA,EAAOH,YAClD,QAAOI,IACHA,IAAStC,GAG2B,uBAAnCsC,EAAKH,aAAeG,EAAKrV,QAIhCf,EAAQqW,KAAO,SAASF,GAQtB,OAPIjV,OAAOoV,eACTpV,OAAOoV,eAAeH,EAAQpC,IAE9BoC,EAAOI,UAAYxC,EACnB7T,EAAOiW,EAAQ/D,EAAmB,sBAEpC+D,EAAO/T,UAAYlB,OAAOY,OAAOuS,GAC1B8B,GAOTnW,EAAQwW,MAAQ,SAASzQ,GACvB,MAAO,CAAE6O,QAAS7O,IAsEpBuO,EAAsBC,EAAcnS,WACpCmS,EAAcnS,UAAU8P,GAAuB,WAC7C,OAAO9R,MAETJ,EAAQuU,cAAgBA,EAKxBvU,EAAQyW,MAAQ,SAASnE,EAASC,EAAS5J,EAAM6J,EAAagC,QACxC,IAAhBA,IAAwBA,EAAc9C,SAE1C,IAAIgF,EAAO,IAAInC,EACblC,EAAKC,EAASC,EAAS5J,EAAM6J,GAC7BgC,GAGF,OAAOxU,EAAQkW,oBAAoB3D,GAC/BmE,EACAA,EAAK1B,OAAOrD,MAAK,SAASjL,GACxB,OAAOA,EAAO+K,KAAO/K,EAAOjF,MAAQiV,EAAK1B,WAuKjDV,EAAsBD,GAEtBnU,EAAOmU,EAAIjC,EAAmB,aAO9BiC,EAAGrC,GAAkB,WACnB,OAAO5R,MAGTiU,EAAGsC,SAAW,WACZ,MAAO,sBAkCT3W,EAAQ4W,KAAO,SAAS1U,GACtB,IAAI0U,EAAO,GACX,IAAK,IAAI7U,KAAOG,EACd0U,EAAKtO,KAAKvG,GAMZ,OAJA6U,EAAKC,UAIE,SAAS7B,IACd,KAAO4B,EAAK1T,QAAQ,CAClB,IAAInB,EAAM6U,EAAKE,MACf,GAAI/U,KAAOG,EAGT,OAFA8S,EAAKvT,MAAQM,EACbiT,EAAKvD,MAAO,EACLuD,EAQX,OADAA,EAAKvD,MAAO,EACLuD,IAsCXhV,EAAQoU,OAASA,EAMjBvB,EAAQzQ,UAAY,CAClB4T,YAAanD,EAEb+C,MAAO,SAASmB,GAcd,GAbA3W,KAAK4W,KAAO,EACZ5W,KAAK4U,KAAO,EAGZ5U,KAAKkT,KAAOlT,KAAKmT,WApgBjBnJ,EAqgBAhK,KAAKqR,MAAO,EACZrR,KAAK8S,SAAW,KAEhB9S,KAAK4S,OAAS,OACd5S,KAAK2F,SAzgBLqE,EA2gBAhK,KAAKqV,WAAW7M,QAAQ8M,IAEnBqB,EACH,IAAK,IAAIhW,KAAQX,KAEQ,MAAnBW,EAAKkW,OAAO,IACZnF,EAAOnR,KAAKP,KAAMW,KACjBgV,OAAOhV,EAAKuG,MAAM,MACrBlH,KAAKW,QAnhBXqJ,IAyhBF8M,KAAM,WACJ9W,KAAKqR,MAAO,EAEZ,IACI0F,EADY/W,KAAKqV,WAAW,GACLE,WAC3B,GAAwB,UAApBwB,EAAWvD,KACb,MAAMuD,EAAWpR,IAGnB,OAAO3F,KAAKgX,MAGd5D,kBAAmB,SAAS6D,GAC1B,GAAIjX,KAAKqR,KACP,MAAM4F,EAGR,IAAIzE,EAAUxS,KACd,SAASkX,EAAOC,EAAKC,GAYnB,OAXA9D,EAAOE,KAAO,QACdF,EAAO3N,IAAMsR,EACbzE,EAAQoC,KAAOuC,EAEXC,IAGF5E,EAAQI,OAAS,OACjBJ,EAAQ7M,SApjBZqE,KAujBYoN,EAGZ,IAAK,IAAIhX,EAAIJ,KAAKqV,WAAWvS,OAAS,EAAG1C,GAAK,IAAKA,EAAG,CACpD,IAAI4U,EAAQhV,KAAKqV,WAAWjV,GACxBkT,EAAS0B,EAAMO,WAEnB,GAAqB,SAAjBP,EAAMC,OAIR,OAAOiC,EAAO,OAGhB,GAAIlC,EAAMC,QAAUjV,KAAK4W,KAAM,CAC7B,IAAIS,EAAW3F,EAAOnR,KAAKyU,EAAO,YAC9BsC,EAAa5F,EAAOnR,KAAKyU,EAAO,cAEpC,GAAIqC,GAAYC,EAAY,CAC1B,GAAItX,KAAK4W,KAAO5B,EAAME,SACpB,OAAOgC,EAAOlC,EAAME,UAAU,GACzB,GAAIlV,KAAK4W,KAAO5B,EAAMG,WAC3B,OAAO+B,EAAOlC,EAAMG,iBAGjB,GAAIkC,GACT,GAAIrX,KAAK4W,KAAO5B,EAAME,SACpB,OAAOgC,EAAOlC,EAAME,UAAU,OAG3B,KAAIoC,EAMT,MAAM,IAAIxJ,MAAM,0CALhB,GAAI9N,KAAK4W,KAAO5B,EAAMG,WACpB,OAAO+B,EAAOlC,EAAMG,gBAU9B9B,OAAQ,SAASG,EAAM7N,GACrB,IAAK,IAAIvF,EAAIJ,KAAKqV,WAAWvS,OAAS,EAAG1C,GAAK,IAAKA,EAAG,CACpD,IAAI4U,EAAQhV,KAAKqV,WAAWjV,GAC5B,GAAI4U,EAAMC,QAAUjV,KAAK4W,MACrBlF,EAAOnR,KAAKyU,EAAO,eACnBhV,KAAK4W,KAAO5B,EAAMG,WAAY,CAChC,IAAIoC,EAAevC,EACnB,OAIAuC,IACU,UAAT/D,GACS,aAATA,IACD+D,EAAatC,QAAUtP,GACvBA,GAAO4R,EAAapC,aAGtBoC,EAAe,MAGjB,IAAIjE,EAASiE,EAAeA,EAAahC,WAAa,GAItD,OAHAjC,EAAOE,KAAOA,EACdF,EAAO3N,IAAMA,EAET4R,GACFvX,KAAK4S,OAAS,OACd5S,KAAK4U,KAAO2C,EAAapC,WAClBlC,GAGFjT,KAAKwX,SAASlE,IAGvBkE,SAAU,SAASlE,EAAQ8B,GACzB,GAAoB,UAAhB9B,EAAOE,KACT,MAAMF,EAAO3N,IAcf,MAXoB,UAAhB2N,EAAOE,MACS,aAAhBF,EAAOE,KACTxT,KAAK4U,KAAOtB,EAAO3N,IACM,WAAhB2N,EAAOE,MAChBxT,KAAKgX,KAAOhX,KAAK2F,IAAM2N,EAAO3N,IAC9B3F,KAAK4S,OAAS,SACd5S,KAAK4U,KAAO,OACa,WAAhBtB,EAAOE,MAAqB4B,IACrCpV,KAAK4U,KAAOQ,GAGPnC,GAGTwE,OAAQ,SAAStC,GACf,IAAK,IAAI/U,EAAIJ,KAAKqV,WAAWvS,OAAS,EAAG1C,GAAK,IAAKA,EAAG,CACpD,IAAI4U,EAAQhV,KAAKqV,WAAWjV,GAC5B,GAAI4U,EAAMG,aAAeA,EAGvB,OAFAnV,KAAKwX,SAASxC,EAAMO,WAAYP,EAAMI,UACtCE,EAAcN,GACP/B,IAKb,MAAS,SAASgC,GAChB,IAAK,IAAI7U,EAAIJ,KAAKqV,WAAWvS,OAAS,EAAG1C,GAAK,IAAKA,EAAG,CACpD,IAAI4U,EAAQhV,KAAKqV,WAAWjV,GAC5B,GAAI4U,EAAMC,SAAWA,EAAQ,CAC3B,IAAI3B,EAAS0B,EAAMO,WACnB,GAAoB,UAAhBjC,EAAOE,KAAkB,CAC3B,IAAIkE,EAASpE,EAAO3N,IACpB2P,EAAcN,GAEhB,OAAO0C,GAMX,MAAM,IAAI5J,MAAM,0BAGlB6J,cAAe,SAASlC,EAAUd,EAAYE,GAa5C,OAZA7U,KAAK8S,SAAW,CACdjB,SAAUmC,EAAOyB,GACjBd,WAAYA,EACZE,QAASA,GAGS,SAAhB7U,KAAK4S,SAGP5S,KAAK2F,SA7rBPqE,GAgsBOiJ,IAQJrT,EA7sBK,CAotBiBC,EAAOD,SAGtC,IACEgY,mBAAqBpG,EACrB,MAAOqG,GAUPC,SAAS,IAAK,yBAAdA,CAAwCtG,K,gBC1uB1C,IAAIuG,EAAmB,EAAQ,GAM/BlY,EAAOD,QAJP,SAA4BgD,GAC1B,GAAII,MAAMgV,QAAQpV,GAAM,OAAOmV,EAAiBnV,K,cCClD/C,EAAOD,QAJP,SAA0B0W,GACxB,GAAsB,oBAAXnV,QAA0BA,OAAO0Q,YAAY/Q,OAAOwV,GAAO,OAAOtT,MAAMiV,KAAK3B,K,gBCD1F,IAAIyB,EAAmB,EAAQ,GAW/BlY,EAAOD,QATP,SAAqCiB,EAAGqX,GACtC,GAAKrX,EAAL,CACA,GAAiB,iBAANA,EAAgB,OAAOkX,EAAiBlX,EAAGqX,GACtD,IAAIrW,EAAIf,OAAOkB,UAAUuU,SAAShW,KAAKM,GAAGqG,MAAM,GAAI,GAEpD,MADU,WAANrF,GAAkBhB,EAAE+U,cAAa/T,EAAIhB,EAAE+U,YAAYjV,MAC7C,QAANkB,GAAqB,QAANA,EAAoBmB,MAAMiV,KAAKpX,GACxC,cAANgB,GAAqB,2CAA2CkC,KAAKlC,GAAWkW,EAAiBlX,EAAGqX,QAAxG,K,cCJFrY,EAAOD,QAJP,WACE,MAAM,IAAI8U,UAAU,0I,oCCQf,MAAMyD,EAAOxP,GAChB,IAAIvC,IAAyB,IAAhBA,EAAKtD,OACZ6F,IACAvC,EAAKW,OAAO,CAACqR,EAAaC,IAAYD,EAAYC,GAAU1P,GCHzD2P,EAAUH,EAAKpL,GAAKwL,GAAKxL,IAAMwL,GAQ/BC,EAAaL,EAAKpL,GAAKwL,GAAKxL,IAAMwL,GAOlCE,EAASH,GAAQ,GA0CjBI,GAnCUJ,GAAQ,GAOFH,EAAKpL,GAAKwL,GAAKA,EAAIxL,GAOtBoL,EAAKpL,GAAKwL,GAAKA,EAAIxL,GAOpBoL,EAAKpL,GAAKwL,GAAKA,GAAKxL,GAOrBoL,EAAKpL,GAAKwL,GAAKA,GAAKxL,GAOpBoL,EAAKpL,GAAKwL,GAAKD,EAAQK,EAAOJ,GAAfD,CAAmBvL,KAO7C6L,EAAWF,EAAS,UAcpBG,GAPYH,EAAS,WAOZJ,EAAQ,OAOjBQ,EAAcJ,EAAS,aAcvBK,GAPWL,EAAS,UAOTA,EAAS,WAOpBV,EAAUhV,MAAMgV,QAOhBgB,EAAaN,EAAS,YAOtBO,EAAWd,EAAKpL,GAAKwL,GAAKD,EAAQY,EAASX,GAAjBD,CAAqBvL,IAO/CoM,EAAchB,EAAKpL,GAAKwL,IAAMU,EAASlM,EAATkM,CAAYV,IAQ1Ca,EAAUH,EAAS,GA6BnBI,GArBaF,EAAY,GAOhBb,EAAQ,GAOLE,EAAW,GAOXzL,GAAK8L,EAAO9L,IAAM+L,EAAY/L,IAAMqM,EAAQrM,ICpKxD4L,EAAS5L,UAAYA,EAOrBmM,EAAWnM,GAAKA,EAAEjK,OAQlBwW,EAAcnB,EAAKoB,GAAKxM,IACnCwM,EAAExM,GACKA,IAwBIyM,GAfMF,EAAYlN,QAAQqN,KAQpBH,EAAYvM,GAAKX,QAAQqN,IAAIC,EAAY3M,KAOzBA,GAAKuL,GAAS,EAATA,CAAYvL,QAAK/C,EAAW+C,GAsCvD2M,EAAc3M,IACzB+L,SAAY/L,GACR,YACA8L,EAAO9L,GACL,OACAiM,EAAWjM,IApCYwM,EAqCLxM,GArCYpM,KAAO4Y,EAAE5Y,KAAOgZ,OAAOJ,GAsCnDvB,EAAQjL,GA/BUA,IAAK,IAAI3H,EAAK,KAALA,CAAWiB,EAAIqT,EAAJrT,CAAiB0G,OAgCrD6M,CAAa7M,GACbgM,EAAShM,GAnBQA,IAC3BiM,EAAWjM,EAAE8M,SACT9M,EAAE8M,UACF,IAAIzU,EAAK,KAALA,CAAWiB,EAAIjB,EAAK,MAATiB,CAAgBA,EAAIyT,GAAK,CAACA,EAAGJ,EAAY3M,EAAE+M,KAA3BzT,CAAiC0T,EAAOhN,SAiB/DiN,CAAcjN,GACd6L,EAAS7L,GA5BMA,IAAK,IAAIA,KA6BtBkN,CAAclN,GACd4M,OAAO5M,GA5CQwM,OC/ClBxS,EAASoR,EAAK+B,GAAWC,GAAWC,GAAQA,EAAKrT,OAAOoT,EAASD,IASjEG,EAAclC,EAAK+B,GAAWC,GAAWC,GAAQA,EAAKC,YAAYF,EAASD,IAO3E7T,EAAM8R,EAAKmC,GAAUF,GAAQA,EAAK/T,IAAIiU,IAOtCxN,EAASqL,EAAKoC,GAAWH,GAAQA,EAAKtN,OAAOyN,IAqB7CnV,GAdO+S,EAAKoC,GAAWH,GAAQA,EAAK1P,KAAK6P,IAO7BpC,EAAKoC,GAAWH,GAAQZ,EAAoBY,EAAKI,UAAUD,KAOhEpC,EAAKsC,GAAaL,GAAQA,EAAKhV,KAAKqV,KAO3CV,EAASjZ,OAAO0V,KCuFhBvN,GDhFYnI,OAAO4Z,QAOTvC,EAAKoC,GAAWH,GAAQA,EAAKO,MAAMJ,IAOrCpC,EAAKyC,GAAOC,GAAST,GAAQA,EAAKlT,MAAM2T,EAAOD,IAO9CzC,EAAKoC,GAAWH,GAAQA,EAAKU,KAAKP,ICU9BpC,EAAKxP,GAAMoS,GAAWA,EAAQ1U,IAAIsC,IA4B9BwP,EAAKxP,GAAMoS,GAAWA,EAAQC,QAAQrS,IAO9CwP,EAAKxP,GAAMsS,GAAOC,GAAOD,EAAI5U,IAAIsC,GAAIwS,GAAGD,IAOxC/C,EAAKxP,GAAMsS,GAAOC,GAAOE,GAAOH,EAAI5U,IAAIsC,GAAIwS,GAAGD,GAAKC,GAAGC,IAOvDjD,EAAKpL,GAAKwL,GAC9BK,EAASL,IAAMP,EAAQO,GACnBA,EAAEtP,OAAO8D,GACTgM,EAASR,GACP,IAAIA,KAAMxL,QACV/C,ICjJKqR,GDwJWlD,EAAKpL,GAAKwL,GAAKA,EAAE+C,SAASvO,IAO3BoL,EAAKpL,GAAKwL,GAAKiB,EAAoBjB,EAAE5U,QAAQoJ,KAOzCoL,EAAKpL,GAAKwL,GAAKiB,EAAoBjB,EAAEgD,YAAYxO,KAOrDoL,EAAKqD,GAAU7S,GAAMoE,GAC1CA,KAAKyO,EAASA,EAAOzO,GAAMuM,EAAYf,GAAKiD,EAAOzO,GAAKwL,EAA9B,CAAkC5P,EAAGoE,KC9K7C0O,GAAUA,EAAOJ,QAcxB7N,GAPY2K,EAAKvO,GAAS6R,GAAU7R,EAAM7F,KAAK0X,IAOtCtD,EAAKuD,GAASb,GAASY,GAAUA,EAAOjO,OAAOqN,EAAOa,KAS/DC,EAAaxD,EAAKyD,GAAaH,GAAUA,EAAOE,WAAWC,IAO3DC,EAAW1D,EAAKyD,GAAaH,GAAUA,EAAOI,SAASD,IAqBvDE,GAdS3D,EAAK4D,GAASN,GAAUA,EAAOO,OAAOD,IAOrC5D,EAAK8D,GAAeL,GAAaH,GAAUA,EAAO5U,QAAQ+U,EAAWK,IAOtE9D,EAAKyD,GAAaH,GAAUjC,EAAoBiC,EAAOK,OAAOF,MAO/DzD,EAAKyD,GAAaH,GAAUA,EAAO3X,MAAM8X,ICvDvD,MAAM,EACX,YAAYM,GACVlc,KAAKwG,MAAQ0V,EAGf,UACE,MAAO,QAAQxC,EAAY1Z,KAAKwG,UAGlC,UAAU0V,GACR,OAAO,IAAI,EACT,CAACA,GAAKnP,GAAKmP,EAAEjb,IAAI8L,IAAMmP,EAAEjb,IAAI,WAAQ+I,EAArC,CAAgD,IAAImS,IAAID,KAI5D,IAAIvT,GACF,OAAO,IAAI,EAAKoE,GAAKpE,EAAG3I,KAAKwG,MAAMuG,KAGrC,QAAQpE,GACN,OAAO,IAAI,EAAKoE,GAAK/M,KAAKqG,IAAIsC,GAAInC,MAAMuG,GAAGvG,MAAMuG,KCwDhCoL,EAAK9L,GAAS+P,GAAUC,GAC3CA,EAAahD,YACThN,EACA+P,EAAOC,EAAahb,QCeJ8W,EAAKmE,GAAUC,GAAWC,GAC9CA,EAAcC,SACVH,EAAOE,EAAcnb,OACrBkb,EAAQC,EAAcnb,QC9FrB,MAAM,EACX,YAAYsH,GACV3I,KAAK0c,QAAU/T,EAGjB,UACE,MAAO,cAAc+Q,EAAY1Z,KAAK0c,YAGxC,UAAUR,GACR,OAAO,IAAI,EAAWA,GAGxB,YAAYA,GACV,OAAO,IAAI,EAAW,IAAMA,GAG9B,IAAIvT,GACF,OAAO,IAAI,EAAWoE,GAAKpE,EAAG3I,KAAK0c,QAAQ3P,KAG7C,QAAQpE,GACN,OAAO,IAAI,EAAW,IACb3I,KAAKqG,IAAIsC,GAAI+T,UAAUA,WAIlC,GAAGnD,GACD,OAAOvZ,KAAKgb,QAAQrS,GAAM4Q,EAAElT,IAAIsC,KCxB7B,MAAM,EACX,YAAYA,GACV3I,KAAK0c,QAAU,CAACzL,EAAQD,KACtB,IACE,OAAOrI,EAAGsI,EAAQD,GAClB,MAAM3E,GACN4E,EAAO5E,KAKb,UACE,MAAO,eAAeqN,EAAY1Z,KAAK0c,YAGzC,UAAUR,GACR,OAAO,IAAI,EAAYA,GAGzB,YAAYA,GACV,OAAO,IAAI,EAAY,CAACS,EAAG3L,IAAYA,EAAQkL,IAGjD,UACE,OAAO,IAAI5K,QAAQ,CAACN,EAASC,IAAWjR,KAAK0c,QAAQzL,EAAQD,IAG/D,IAAIrI,GACF,OAAO,IAAI,EAAY,CAACsI,EAAQD,IAAYhR,KAAK0c,QAAQzL,EAAQlE,GAAKiE,EAAQrI,EAAGoE,MAGnF,QAAQpE,GACN,OAAO,IAAI,EAAY,CAACsI,EAAQD,IAAYhR,KAAK0c,QAAQzL,EAAQiL,GAAKvT,EAAGuT,GAAGQ,QAAQzL,EAAQD,KAG9F,GAAGuI,GACD,OAAOvZ,KAAKgb,QAAQrS,GAAM4Q,EAAElT,IAAIsC,KCpDpC,MAQMiU,EAAuB,CAC3BC,OAAQ,CACNpD,KAAK,EACLqD,OAAO,EACP1L,MAAM,EACN2L,MAAM,EACN1Q,OAAO,GAET2Q,QAAS5Q,QACT6Q,UAZuBC,GAASC,IAChC,IAAIC,MAAOC,iBAAmB,MAAmBH,ENwEPjW,cMxEgB,MAAOkW,GAc7DG,EAAYC,IAAiB,CACjC9D,IAAK,EAAI8D,EAAJ,CAAmB,OACxBT,MAAO,EAAIS,EAAJ,CAAmB,SAC1BnM,KAAM,EAAImM,EAAJ,CAAmB,QACzBR,KAAM,EAAIQ,EAAJ,CAAmB,QACzBlR,MAAO,EAAIkR,EAAJ,CAAmB,WAGtB,EAAMA,GAAiBL,GAC3BzE,EAAO8E,EAAcV,OAAOK,IACxB5D,EPeiB,KAAIkE,IAAQC,GAAYpD,EAAYoD,EAAZpD,CAAsB,CAACqD,EAAGnE,IAAMA,EAAEmE,GAAlCrD,CAAsCmD,GOfnEG,CAAQJ,EAAcP,QAAQE,GAAQK,EAAcN,UAAUC,KAC1E,IAAM,KAEG,MAjCMK,GAAiBD,EAAU,IAC3CV,KACAW,I,gCCaCK,EAAmB,SAAAC,GAAQ,OAAI,SAAAC,GAAS,OAC1CC,EACCC,IAAG,SAAC/M,EAAQD,GAAT,OACAqI,EAAUyE,EAAUD,IAClB5M,EAAO,KAAD,OAAM4M,EAAN,2FACLva,IAAG0C,SAAS8X,EAAUD,IAAWI,cAEhCjN,EAAQ8M,GADR7M,EAAO,KAAD,OAAM4M,EAAN,YAAkBC,EAAUD,GAA5B,8BA0BHK,EAVXH,EACCC,IAAG,SAAC/M,EAAQD,GAAT,OAAqBA,EAAQ,IAAI8M,IAAU3Z,YAC9CkC,KAAI,SAAA0G,GAAC,OAAIA,EAAEO,QAAQ,QAAS,gBAAiB,iCAC7CjH,KAAI,SAAA0G,GAAC,OAAIA,EAAEvD,OAAO,sBAAuB,8BACzCnD,KAAI,SAAA0G,GAAC,OAAIA,EAAEvD,OAAO,wBAAyB,uBAC3CnD,KAAI,SAAA0G,GAAC,OAAIA,EAAE7C,MAAM1E,QAAQ2E,SACzB6Q,QAAQ4C,EAAiB,UACzB5C,QAAQ4C,EAAiB,WACzBvX,KAAI,SAAA0G,GAAC,MAAK,CAACoQ,MAAOpQ,EAAEoQ,MAAOgB,OAAQpR,EAAEoR,W,woBC1C1C,IAAMC,GACI,OADJA,GAEK,QAFLA,GAGW,cAHXA,GAIG,MAJHA,GAKO,UALPA,GAMI,OANJA,GAOG,MAgBHC,GAAkB,SAAAvb,GAAM,OAAI,SAAAwb,GAAI,OAE9BC,EACF/Q,EAAO0L,EAASoF,GAAhB9Q,CAAuB1K,EAAvB0K,CAA+B8Q,GADjB9Q,EAAOsO,EAAO,IAAPA,CAAYyC,GAAnB/Q,CAA8B,EAA9BA,CAAiC+Q,GAA7C,IAAAA,IAeFC,GAAuB,SAAAF,GAAI,OAC5B,SAAAA,GAAI,OACA,SAAAA,GAAI,OACD3C,EAAW,SAAXA,CAAqB2C,GACnBzC,EAAS,OAATA,CAAiByC,GACf,CACI3L,MAAOyL,GACPG,SAAU,CACN5d,KAAM0d,GAAgB,EAAhBA,CAAmBC,GACzB9K,KAAM,WAGd,CACIb,MAAOyL,GACPG,SAAU,CACN5d,KAAM0d,GAAgB,EAAhBA,CAAmBC,GACzB9K,KAAM,eAGhBmI,EAAW,SAAXA,CAAqB2C,GACrB,CACE3L,MAAOyL,GACPG,SAAU,CACN5d,KAAM0d,GAAgB,EAAhBA,CAAmBC,GACzB9K,KAAM,UAGZmI,EAAW,YAAXA,CAAwB2C,GACxB,CACE3L,MAAOyL,GACPG,SAAU,CACN5d,KAAM0d,GAAgB,EAAhBA,CAAmBC,GACzB9K,KAAM,aAGZ,CACEb,MAAOyL,GACPG,SAAU,CACN5d,KAAM,UACN6S,KAAM,YArCjB,CAyCAmI,EAAW,UAAXA,CAAsB2C,GAAQ9Q,EAAO0L,EAASoF,GAAhB9Q,CAAuB,EAAvBA,CAA0B8Q,GAAQA,GA1CpE,CA4CAjD,EAAKiD,KA8BJG,GAAuB,SAAAH,GAAI,OAC7BhG,EAAQ,MAARA,CAAegG,GACT,CAAC3L,MAAOyL,GAAoBM,uBAAuB,GACnD,CAAC/L,MAAOyL,KAcZO,GAAqC,SAAAJ,GAAQ,OAAKjY,EAAoEwV,EAAO,IAAPA,CAAYyC,GAAtEjG,EAAQhS,EAARgS,MAAgBtO,GAAakP,EAASqF,GAAYjY,EAA5D,IAAAA,GA0FlDsY,GAAmB,SAAApL,GAAI,OAAI,SAAA+K,GAAQ,OACrC5C,EAAW,IAAXA,CAAgB4C,GACTrF,EAASqF,GAAY,GAxCbM,EAtBI,SAAAN,GAAQ,OAAIjG,EAAQwD,EAAO,IAAPA,CAAYyC,GAApBjG,MAA+BtO,GAAa,OAASqR,EAAK7N,EAAO0L,EAASqF,GAAhB/Q,CAA2BmR,GAAmCJ,GAA9D/Q,CAAyE+Q,IA8DvHO,CAAeP,GAxC5B,SAAAQ,GAAG,OACjCzG,EAAoByG,ERrHoBC,cQqHxC1G,CAA0B,WACpB,CAAC3F,MAAOyL,IACR,CACEzL,MAAOyL,GACPG,SAAU,CACNU,KAAM,CAAC,OACFF,EAAMF,QA7CZ,SAAAN,GAAQ,OAAI/Q,EAAOmR,GAAmCJ,GAAW,EAArD/Q,CAAwD,EAAxDA,CAA2D+Q,GA8EbW,CAAOX,IAAa,GAEnFrF,EAASqF,GAAY,GAEjBjG,EAAQ9E,EAAR8E,CAAc,WADd,CAACiG,SAAQ,OAAG/K,EAAM,CAAC+K,KACyC,GA5CvD,IAAAM,IAwEbM,GAAuB,SAAA3L,GAAI,OAAI,SAAA8K,GAAI,OACrC3C,EAAW,IAAXA,CAAgB2C,GACVhG,EAAQ,KAARA,CAAcgG,GACV,CAAC3L,MAAOyL,IACRQ,GAAiBpL,EAAjBoL,CAjKuB,SAAAN,GAAI,OACpCxb,EACAoW,EAASoF,IADU,EAAK9Q,EAAO1K,EAAP0K,CAAe,EAAfA,CAAkB8Q,GAAS,GAAnD,IAAAxb,EAgKgCsc,CAA6Bd,IACxD,KA0CJe,GAAoB,SAAAC,GAAK,OAAI,SAAAC,GAAc,OAAI,SAAAC,GAAO,OACvDA,EAAQjB,UAAYiB,EAAQjB,SAASe,GACpCrW,EAAOuW,EAAQjB,SAASe,GAAxBrW,CAAgCsW,EAAenH,YAAYkH,IAC3DC,EAAenH,YAAYkH,MAgG3BG,GAAc,SAACF,EAAgBjB,GAAjB,OA3De,SAAAiB,GAAc,OAAI,SAAAC,GAAO,OACvDlH,EAAQkH,EAAQ7M,MAAhB2F,CAAuB8F,IAAxB,SAEOmB,GAFP,IAGI5M,MAAOyL,GACPG,SAAU,GAAF,WACDgB,EAAehB,UADd,UAGGgB,EAAenH,aAHlB,IAIAzX,KAAM6e,EAAQjB,SAAS5d,KACvB6S,KAAMgM,EAAQjB,SAAS/K,SAG/B4E,YAAa,CACT3U,YAAa,GACbwb,KAAM,GACNS,QAAS,MAfjB,SAmBOH,GAnBP,IAoBI5M,MAAQ6M,EAAQ7M,MAAS6M,EAAQ7M,MAAQ4M,EAAe5M,MACxDyF,YAAa,CACT3U,YAAa4b,GAAkB,cAAlBA,CAAiCE,EAAjCF,CAAiDG,GAC9DP,KAAMI,GAAkB,OAAlBA,CAA0BE,EAA1BF,CAA0CG,GAChDE,QAASL,GAAkB,UAAlBA,CAA6BE,EAA7BF,CAA6CG,OAmC9DG,CAA2BJ,EAA3BI,EA/H4BhN,EA+HuC4M,EAAe5M,MA9HlFiN,EACC5B,GAAG,CACA,CAACI,GAAaK,IACd,CAACL,GAAce,GAAqB,gBACpC,CAACf,GAAoBe,GAAqB,gBAC1C,CAACf,GAAYe,GAAqB,gBAClC,CAACf,GAAgBe,GAAqB,YACtC,CAACf,GAAaI,IACd,CAACJ,GAAYK,MAEhBjY,MAAMmM,IAoHkF0I,EAAKiD,EAAK/H,cA/HvE,IAAA5D,GAsK1BkN,GAA+BC,EAAW9B,IAAG,SAAA7a,GAAI,OAAIG,IAAGyc,WAAW5c,GAAQmM,KAAUkB,SAASrN,GAAQ,gIAqBtG6c,GAAiB,SAAjBA,EAAiBC,GAAa,OAAI,SAAA1N,GAAS,OAC5C2N,EAKA3N,EAAUqC,QAJFvD,KACH4O,EACAD,EAAeP,GAAYQ,EAAeC,EAAK7e,OAA/C2e,CAAuDzN,GAH5D,IAAA2N,I,mBC/cCC,GAASC,IAKflC,EACClD,SDmegC,SAAAuC,GAAa,OAvEJ,SAAAA,GAAa,OACnDQ,EACCC,IAAG,SAAC/M,EAAQD,GAAT,OACC7N,EAQC0Y,EAAS,IAATA,CAAc0B,EAAcJ,OAASI,EAAcJ,MAAQI,EAAcJ,MAAQ,IAP/EnM,EAAQ,CACJmM,MAAOha,EACPgb,OAAQtC,EAAS,IAATA,CAAc0B,EAAcY,QAAUZ,EAAcY,OAASZ,EAAcY,OAAS,IAC5FkC,MAAOha,GAAI,SAAAN,GAAI,OAAI5C,EAAO4C,IAAnBM,CACIyG,EAAO+O,EAAS,OAAhB/O,CACAxJ,IAAGgd,YAAYnd,OANjC,IAAAA,KAqELod,CAAkChD,GACjClX,KAAI,SAAAma,GAAsB,gBACpBA,GADoB,IAEvBP,cAAelZ,EACV,GADUA,EAEV,SAACkZ,EAAela,GAAhB,oBACMka,GADN,CAEG,CACIla,KAAMA,EACNwY,SAAUyB,GAAe,CACrBrN,MAAO,OACP4L,SAAU,GACVnG,YAAa,CACT3U,YAAa,GACbwb,KAAM,GACNS,QAAS,KANPM,CAQPH,GAA6BnD,QAAQ3W,IAAOwY,cAd5CxX,CAiBVyZ,EAAuBH,eCvfnCrF,SCKyC,SAAAuC,GAAa,OACnDQ,EAAYC,GAAZ,gCACI,WAAO/M,EAAQD,GAAf,SAAAjE,EAAA,+EACIzJ,IAAGmd,UACClD,EAAcY,OAAS,qBACvB5P,KAAKC,UAAU+O,EAAc0C,eAC7B,QACA,SAAA5T,GAAK,OAAIA,EACH4E,EAAO,oCAAD,OAAqCsM,EAAcY,OAAnD,gDAAiG9R,EAAjG,OACN2E,EAAQuM,OAPtB,2CADJ,4DDLHb,QACCyD,GAAO9T,OACP,SAAAkR,GAAa,OAAI4C,GAAO/O,KAAP,6BAAkCmM,EAAcJ,MAAhD,qCAAkFI,EAAcY,OAAhG,OAA8G3Y,QAAQC,KAAK","file":"documenter.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"documenter\"] = factory();\n\telse\n\t\troot[\"documenter\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 17);\n","module.exports = require(\"fs\");","module.exports = require(\"regenerator-runtime\");\n","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","/**\n * Module dependencies.\n */\n\nvar EventEmitter = require('events').EventEmitter;\nvar spawn = require('child_process').spawn;\nvar path = require('path');\nvar dirname = path.dirname;\nvar basename = path.basename;\nvar fs = require('fs');\n\n/**\n * Inherit `Command` from `EventEmitter.prototype`.\n */\n\nrequire('util').inherits(Command, EventEmitter);\n\n/**\n * Expose the root command.\n */\n\nexports = module.exports = new Command();\n\n/**\n * Expose `Command`.\n */\n\nexports.Command = Command;\n\n/**\n * Expose `Option`.\n */\n\nexports.Option = Option;\n\n/**\n * Initialize a new `Option` with the given `flags` and `description`.\n *\n * @param {String} flags\n * @param {String} description\n * @api public\n */\n\nfunction Option(flags, description) {\n  this.flags = flags;\n  this.required = flags.indexOf('<') >= 0;\n  this.optional = flags.indexOf('[') >= 0;\n  this.negate = flags.indexOf('-no-') !== -1;\n  flags = flags.split(/[ ,|]+/);\n  if (flags.length > 1 && !/^[[<]/.test(flags[1])) this.short = flags.shift();\n  this.long = flags.shift();\n  this.description = description || '';\n}\n\n/**\n * Return option name.\n *\n * @return {String}\n * @api private\n */\n\nOption.prototype.name = function() {\n  return this.long.replace(/^--/, '');\n};\n\n/**\n * Return option name, in a camelcase format that can be used\n * as a object attribute key.\n *\n * @return {String}\n * @api private\n */\n\nOption.prototype.attributeName = function() {\n  return camelcase(this.name().replace(/^no-/, ''));\n};\n\n/**\n * Check if `arg` matches the short or long flag.\n *\n * @param {String} arg\n * @return {Boolean}\n * @api private\n */\n\nOption.prototype.is = function(arg) {\n  return this.short === arg || this.long === arg;\n};\n\n/**\n * Initialize a new `Command`.\n *\n * @param {String} name\n * @api public\n */\n\nfunction Command(name) {\n  this.commands = [];\n  this.options = [];\n  this._execs = new Set();\n  this._allowUnknownOption = false;\n  this._args = [];\n  this._name = name || '';\n\n  this._helpFlags = '-h, --help';\n  this._helpDescription = 'output usage information';\n  this._helpShortFlag = '-h';\n  this._helpLongFlag = '--help';\n}\n\n/**\n * Define a command.\n *\n * There are two styles of command: pay attention to where to put the description.\n *\n * Examples:\n *\n *      // Command implemented using action handler (description is supplied separately to `.command`)\n *      program\n *        .command('clone <source> [destination]')\n *        .description('clone a repository into a newly created directory')\n *        .action((source, destination) => {\n *          console.log('clone command called');\n *        });\n *\n *      // Command implemented using separate executable file (description is second parameter to `.command`)\n *      program\n *        .command('start <service>', 'start named service')\n *        .command('stop [service]', 'stop named serice, or all if no name supplied');\n *\n * @param {string} nameAndArgs - command name and arguments, args are `<required>` or `[optional]` and last may also be `variadic...`\n * @param {Object|string} [actionOptsOrExecDesc] - configuration options (for action), or description (for executable)\n * @param {Object} [execOpts] - configuration options (for executable)\n * @return {Command} returns new command for action handler, or top-level command for executable command\n * @api public\n */\n\nCommand.prototype.command = function(nameAndArgs, actionOptsOrExecDesc, execOpts) {\n  var desc = actionOptsOrExecDesc;\n  var opts = execOpts;\n  if (typeof desc === 'object' && desc !== null) {\n    opts = desc;\n    desc = null;\n  }\n  opts = opts || {};\n  var args = nameAndArgs.split(/ +/);\n  var cmd = new Command(args.shift());\n\n  if (desc) {\n    cmd.description(desc);\n    this.executables = true;\n    this._execs.add(cmd._name);\n    if (opts.isDefault) this.defaultExecutable = cmd._name;\n  }\n  cmd._noHelp = !!opts.noHelp;\n  cmd._helpFlags = this._helpFlags;\n  cmd._helpDescription = this._helpDescription;\n  cmd._helpShortFlag = this._helpShortFlag;\n  cmd._helpLongFlag = this._helpLongFlag;\n  cmd._executableFile = opts.executableFile; // Custom name for executable file\n  this.commands.push(cmd);\n  cmd.parseExpectedArgs(args);\n  cmd.parent = this;\n\n  if (desc) return this;\n  return cmd;\n};\n\n/**\n * Define argument syntax for the top-level command.\n *\n * @api public\n */\n\nCommand.prototype.arguments = function(desc) {\n  return this.parseExpectedArgs(desc.split(/ +/));\n};\n\n/**\n * Add an implicit `help [cmd]` subcommand\n * which invokes `--help` for the given command.\n *\n * @api private\n */\n\nCommand.prototype.addImplicitHelpCommand = function() {\n  this.command('help [cmd]', 'display help for [cmd]');\n};\n\n/**\n * Parse expected `args`.\n *\n * For example `[\"[type]\"]` becomes `[{ required: false, name: 'type' }]`.\n *\n * @param {Array} args\n * @return {Command} for chaining\n * @api public\n */\n\nCommand.prototype.parseExpectedArgs = function(args) {\n  if (!args.length) return;\n  var self = this;\n  args.forEach(function(arg) {\n    var argDetails = {\n      required: false,\n      name: '',\n      variadic: false\n    };\n\n    switch (arg[0]) {\n      case '<':\n        argDetails.required = true;\n        argDetails.name = arg.slice(1, -1);\n        break;\n      case '[':\n        argDetails.name = arg.slice(1, -1);\n        break;\n    }\n\n    if (argDetails.name.length > 3 && argDetails.name.slice(-3) === '...') {\n      argDetails.variadic = true;\n      argDetails.name = argDetails.name.slice(0, -3);\n    }\n    if (argDetails.name) {\n      self._args.push(argDetails);\n    }\n  });\n  return this;\n};\n\n/**\n * Register callback `fn` for the command.\n *\n * Examples:\n *\n *      program\n *        .command('help')\n *        .description('display verbose help')\n *        .action(function() {\n *           // output help here\n *        });\n *\n * @param {Function} fn\n * @return {Command} for chaining\n * @api public\n */\n\nCommand.prototype.action = function(fn) {\n  var self = this;\n  var listener = function(args, unknown) {\n    // Parse any so-far unknown options\n    args = args || [];\n    unknown = unknown || [];\n\n    var parsed = self.parseOptions(unknown);\n\n    // Output help if necessary\n    outputHelpIfNecessary(self, parsed.unknown);\n\n    // If there are still any unknown options, then we simply\n    // die, unless someone asked for help, in which case we give it\n    // to them, and then we die.\n    if (parsed.unknown.length > 0) {\n      self.unknownOption(parsed.unknown[0]);\n    }\n\n    // Leftover arguments need to be pushed back. Fixes issue #56\n    if (parsed.args.length) args = parsed.args.concat(args);\n\n    self._args.forEach(function(arg, i) {\n      if (arg.required && args[i] == null) {\n        self.missingArgument(arg.name);\n      } else if (arg.variadic) {\n        if (i !== self._args.length - 1) {\n          self.variadicArgNotLast(arg.name);\n        }\n\n        args[i] = args.splice(i);\n      }\n    });\n\n    // Always append ourselves to the end of the arguments,\n    // to make sure we match the number of arguments the user\n    // expects\n    if (self._args.length) {\n      args[self._args.length] = self;\n    } else {\n      args.push(self);\n    }\n\n    fn.apply(self, args);\n  };\n  var parent = this.parent || this;\n  var name = parent === this ? '*' : this._name;\n  parent.on('command:' + name, listener);\n  if (this._alias) parent.on('command:' + this._alias, listener);\n  return this;\n};\n\n/**\n * Define option with `flags`, `description` and optional\n * coercion `fn`.\n *\n * The `flags` string should contain both the short and long flags,\n * separated by comma, a pipe or space. The following are all valid\n * all will output this way when `--help` is used.\n *\n *    \"-p, --pepper\"\n *    \"-p|--pepper\"\n *    \"-p --pepper\"\n *\n * Examples:\n *\n *     // simple boolean defaulting to undefined\n *     program.option('-p, --pepper', 'add pepper');\n *\n *     program.pepper\n *     // => undefined\n *\n *     --pepper\n *     program.pepper\n *     // => true\n *\n *     // simple boolean defaulting to true (unless non-negated option is also defined)\n *     program.option('-C, --no-cheese', 'remove cheese');\n *\n *     program.cheese\n *     // => true\n *\n *     --no-cheese\n *     program.cheese\n *     // => false\n *\n *     // required argument\n *     program.option('-C, --chdir <path>', 'change the working directory');\n *\n *     --chdir /tmp\n *     program.chdir\n *     // => \"/tmp\"\n *\n *     // optional argument\n *     program.option('-c, --cheese [type]', 'add cheese [marble]');\n *\n * @param {String} flags\n * @param {String} description\n * @param {Function|*} [fn] or default\n * @param {*} [defaultValue]\n * @return {Command} for chaining\n * @api public\n */\n\nCommand.prototype.option = function(flags, description, fn, defaultValue) {\n  var self = this,\n    option = new Option(flags, description),\n    oname = option.name(),\n    name = option.attributeName();\n\n  // default as 3rd arg\n  if (typeof fn !== 'function') {\n    if (fn instanceof RegExp) {\n      // This is a bit simplistic (especially no error messages), and probably better handled by caller using custom option processing.\n      // No longer documented in README, but still present for backwards compatibility.\n      var regex = fn;\n      fn = function(val, def) {\n        var m = regex.exec(val);\n        return m ? m[0] : def;\n      };\n    } else {\n      defaultValue = fn;\n      fn = null;\n    }\n  }\n\n  // preassign default value for --no-*, [optional], <required>, or plain flag if boolean value\n  if (option.negate || option.optional || option.required || typeof defaultValue === 'boolean') {\n    // when --no-foo we make sure default is true, unless a --foo option is already defined\n    if (option.negate) {\n      var opts = self.opts();\n      defaultValue = Object.prototype.hasOwnProperty.call(opts, name) ? opts[name] : true;\n    }\n    // preassign only if we have a default\n    if (defaultValue !== undefined) {\n      self[name] = defaultValue;\n      option.defaultValue = defaultValue;\n    }\n  }\n\n  // register the option\n  this.options.push(option);\n\n  // when it's passed assign the value\n  // and conditionally invoke the callback\n  this.on('option:' + oname, function(val) {\n    // coercion\n    if (val !== null && fn) {\n      val = fn(val, self[name] === undefined ? defaultValue : self[name]);\n    }\n\n    // unassigned or boolean value\n    if (typeof self[name] === 'boolean' || typeof self[name] === 'undefined') {\n      // if no value, negate false, and we have a default, then use it!\n      if (val == null) {\n        self[name] = option.negate\n          ? false\n          : defaultValue || true;\n      } else {\n        self[name] = val;\n      }\n    } else if (val !== null) {\n      // reassign\n      self[name] = option.negate ? false : val;\n    }\n  });\n\n  return this;\n};\n\n/**\n * Allow unknown options on the command line.\n *\n * @param {Boolean} arg if `true` or omitted, no error will be thrown\n * for unknown options.\n * @api public\n */\nCommand.prototype.allowUnknownOption = function(arg) {\n  this._allowUnknownOption = arguments.length === 0 || arg;\n  return this;\n};\n\n/**\n * Parse `argv`, settings options and invoking commands when defined.\n *\n * @param {Array} argv\n * @return {Command} for chaining\n * @api public\n */\n\nCommand.prototype.parse = function(argv) {\n  // implicit help\n  if (this.executables) this.addImplicitHelpCommand();\n\n  // store raw args\n  this.rawArgs = argv;\n\n  // guess name\n  this._name = this._name || basename(argv[1], '.js');\n\n  // github-style sub-commands with no sub-command\n  if (this.executables && argv.length < 3 && !this.defaultExecutable) {\n    // this user needs help\n    argv.push(this._helpLongFlag);\n  }\n\n  // process argv\n  var normalized = this.normalize(argv.slice(2));\n  var parsed = this.parseOptions(normalized);\n  var args = this.args = parsed.args;\n\n  var result = this.parseArgs(this.args, parsed.unknown);\n\n  if (args[0] === 'help' && args.length === 1) this.help();\n\n  // <cmd> --help\n  if (args[0] === 'help') {\n    args[0] = args[1];\n    args[1] = this._helpLongFlag;\n  }\n\n  // executable sub-commands\n  // (Debugging note for future: args[0] is not right if an action has been called)\n  var name = result.args[0];\n  var subCommand = null;\n\n  // Look for subcommand\n  if (name) {\n    subCommand = this.commands.find(function(command) {\n      return command._name === name;\n    });\n  }\n\n  // Look for alias\n  if (!subCommand && name) {\n    subCommand = this.commands.find(function(command) {\n      return command.alias() === name;\n    });\n    if (subCommand) {\n      name = subCommand._name;\n      args[0] = name;\n    }\n  }\n\n  // Look for default subcommand\n  if (!subCommand && this.defaultExecutable) {\n    name = this.defaultExecutable;\n    args.unshift(name);\n    subCommand = this.commands.find(function(command) {\n      return command._name === name;\n    });\n  }\n\n  if (this._execs.has(name)) {\n    return this.executeSubCommand(argv, args, parsed.unknown, subCommand ? subCommand._executableFile : undefined);\n  }\n\n  return result;\n};\n\n/**\n * Execute a sub-command executable.\n *\n * @param {Array} argv\n * @param {Array} args\n * @param {Array} unknown\n * @param {String} specifySubcommand\n * @api private\n */\n\nCommand.prototype.executeSubCommand = function(argv, args, unknown, executableFile) {\n  args = args.concat(unknown);\n\n  if (!args.length) this.help();\n\n  var isExplicitJS = false; // Whether to use node to launch \"executable\"\n\n  // executable\n  var pm = argv[1];\n  // name of the subcommand, like `pm-install`\n  var bin = basename(pm, path.extname(pm)) + '-' + args[0];\n  if (executableFile != null) {\n    bin = executableFile;\n    // Check for same extensions as we scan for below so get consistent launch behaviour.\n    var executableExt = path.extname(executableFile);\n    isExplicitJS = executableExt === '.js' || executableExt === '.ts' || executableExt === '.mjs';\n  }\n\n  // In case of globally installed, get the base dir where executable\n  //  subcommand file should be located at\n  var baseDir;\n\n  var resolvedLink = fs.realpathSync(pm);\n\n  baseDir = dirname(resolvedLink);\n\n  // prefer local `./<bin>` to bin in the $PATH\n  var localBin = path.join(baseDir, bin);\n\n  // whether bin file is a js script with explicit `.js` or `.ts` extension\n  if (exists(localBin + '.js')) {\n    bin = localBin + '.js';\n    isExplicitJS = true;\n  } else if (exists(localBin + '.ts')) {\n    bin = localBin + '.ts';\n    isExplicitJS = true;\n  } else if (exists(localBin + '.mjs')) {\n    bin = localBin + '.mjs';\n    isExplicitJS = true;\n  } else if (exists(localBin)) {\n    bin = localBin;\n  }\n\n  args = args.slice(1);\n\n  var proc;\n  if (process.platform !== 'win32') {\n    if (isExplicitJS) {\n      args.unshift(bin);\n      // add executable arguments to spawn\n      args = incrementNodeInspectorPort(process.execArgv).concat(args);\n\n      proc = spawn(process.argv[0], args, { stdio: 'inherit', customFds: [0, 1, 2] });\n    } else {\n      proc = spawn(bin, args, { stdio: 'inherit', customFds: [0, 1, 2] });\n    }\n  } else {\n    args.unshift(bin);\n    // add executable arguments to spawn\n    args = incrementNodeInspectorPort(process.execArgv).concat(args);\n    proc = spawn(process.execPath, args, { stdio: 'inherit' });\n  }\n\n  var signals = ['SIGUSR1', 'SIGUSR2', 'SIGTERM', 'SIGINT', 'SIGHUP'];\n  signals.forEach(function(signal) {\n    process.on(signal, function() {\n      if (proc.killed === false && proc.exitCode === null) {\n        proc.kill(signal);\n      }\n    });\n  });\n  proc.on('close', process.exit.bind(process));\n  proc.on('error', function(err) {\n    if (err.code === 'ENOENT') {\n      console.error('error: %s(1) does not exist, try --help', bin);\n    } else if (err.code === 'EACCES') {\n      console.error('error: %s(1) not executable. try chmod or run with root', bin);\n    }\n    process.exit(1);\n  });\n\n  // Store the reference to the child process\n  this.runningCommand = proc;\n};\n\n/**\n * Normalize `args`, splitting joined short flags. For example\n * the arg \"-abc\" is equivalent to \"-a -b -c\".\n * This also normalizes equal sign and splits \"--abc=def\" into \"--abc def\".\n *\n * @param {Array} args\n * @return {Array}\n * @api private\n */\n\nCommand.prototype.normalize = function(args) {\n  var ret = [],\n    arg,\n    lastOpt,\n    index,\n    short,\n    opt;\n\n  for (var i = 0, len = args.length; i < len; ++i) {\n    arg = args[i];\n    if (i > 0) {\n      lastOpt = this.optionFor(args[i - 1]);\n    }\n\n    if (arg === '--') {\n      // Honor option terminator\n      ret = ret.concat(args.slice(i));\n      break;\n    } else if (lastOpt && lastOpt.required) {\n      ret.push(arg);\n    } else if (arg.length > 2 && arg[0] === '-' && arg[1] !== '-') {\n      short = arg.slice(0, 2);\n      opt = this.optionFor(short);\n      if (opt && (opt.required || opt.optional)) {\n        ret.push(short);\n        ret.push(arg.slice(2));\n      } else {\n        arg.slice(1).split('').forEach(function(c) {\n          ret.push('-' + c);\n        });\n      }\n    } else if (/^--/.test(arg) && ~(index = arg.indexOf('='))) {\n      ret.push(arg.slice(0, index), arg.slice(index + 1));\n    } else {\n      ret.push(arg);\n    }\n  }\n\n  return ret;\n};\n\n/**\n * Parse command `args`.\n *\n * When listener(s) are available those\n * callbacks are invoked, otherwise the \"*\"\n * event is emitted and those actions are invoked.\n *\n * @param {Array} args\n * @return {Command} for chaining\n * @api private\n */\n\nCommand.prototype.parseArgs = function(args, unknown) {\n  var name;\n\n  if (args.length) {\n    name = args[0];\n    if (this.listeners('command:' + name).length) {\n      this.emit('command:' + args.shift(), args, unknown);\n    } else {\n      this.emit('command:*', args);\n    }\n  } else {\n    outputHelpIfNecessary(this, unknown);\n\n    // If there were no args and we have unknown options,\n    // then they are extraneous and we need to error.\n    if (unknown.length > 0) {\n      this.unknownOption(unknown[0]);\n    }\n    if (this.commands.length === 0 &&\n        this._args.filter(function(a) { return a.required; }).length === 0) {\n      this.emit('command:*');\n    }\n  }\n\n  return this;\n};\n\n/**\n * Return an option matching `arg` if any.\n *\n * @param {String} arg\n * @return {Option}\n * @api private\n */\n\nCommand.prototype.optionFor = function(arg) {\n  for (var i = 0, len = this.options.length; i < len; ++i) {\n    if (this.options[i].is(arg)) {\n      return this.options[i];\n    }\n  }\n};\n\n/**\n * Parse options from `argv` returning `argv`\n * void of these options.\n *\n * @param {Array} argv\n * @return {Array}\n * @api public\n */\n\nCommand.prototype.parseOptions = function(argv) {\n  var args = [],\n    len = argv.length,\n    literal,\n    option,\n    arg;\n\n  var unknownOptions = [];\n\n  // parse options\n  for (var i = 0; i < len; ++i) {\n    arg = argv[i];\n\n    // literal args after --\n    if (literal) {\n      args.push(arg);\n      continue;\n    }\n\n    if (arg === '--') {\n      literal = true;\n      continue;\n    }\n\n    // find matching Option\n    option = this.optionFor(arg);\n\n    // option is defined\n    if (option) {\n      // requires arg\n      if (option.required) {\n        arg = argv[++i];\n        if (arg == null) return this.optionMissingArgument(option);\n        this.emit('option:' + option.name(), arg);\n      // optional arg\n      } else if (option.optional) {\n        arg = argv[i + 1];\n        if (arg == null || (arg[0] === '-' && arg !== '-')) {\n          arg = null;\n        } else {\n          ++i;\n        }\n        this.emit('option:' + option.name(), arg);\n      // flag\n      } else {\n        this.emit('option:' + option.name());\n      }\n      continue;\n    }\n\n    // looks like an option\n    if (arg.length > 1 && arg[0] === '-') {\n      unknownOptions.push(arg);\n\n      // If the next argument looks like it might be\n      // an argument for this option, we pass it on.\n      // If it isn't, then it'll simply be ignored\n      if ((i + 1) < argv.length && (argv[i + 1][0] !== '-' || argv[i + 1] === '-')) {\n        unknownOptions.push(argv[++i]);\n      }\n      continue;\n    }\n\n    // arg\n    args.push(arg);\n  }\n\n  return { args: args, unknown: unknownOptions };\n};\n\n/**\n * Return an object containing options as key-value pairs\n *\n * @return {Object}\n * @api public\n */\nCommand.prototype.opts = function() {\n  var result = {},\n    len = this.options.length;\n\n  for (var i = 0; i < len; i++) {\n    var key = this.options[i].attributeName();\n    result[key] = key === this._versionOptionName ? this._version : this[key];\n  }\n  return result;\n};\n\n/**\n * Argument `name` is missing.\n *\n * @param {String} name\n * @api private\n */\n\nCommand.prototype.missingArgument = function(name) {\n  console.error(\"error: missing required argument '%s'\", name);\n  process.exit(1);\n};\n\n/**\n * `Option` is missing an argument, but received `flag` or nothing.\n *\n * @param {String} option\n * @param {String} flag\n * @api private\n */\n\nCommand.prototype.optionMissingArgument = function(option, flag) {\n  if (flag) {\n    console.error(\"error: option '%s' argument missing, got '%s'\", option.flags, flag);\n  } else {\n    console.error(\"error: option '%s' argument missing\", option.flags);\n  }\n  process.exit(1);\n};\n\n/**\n * Unknown option `flag`.\n *\n * @param {String} flag\n * @api private\n */\n\nCommand.prototype.unknownOption = function(flag) {\n  if (this._allowUnknownOption) return;\n  console.error(\"error: unknown option '%s'\", flag);\n  process.exit(1);\n};\n\n/**\n * Variadic argument with `name` is not the last argument as required.\n *\n * @param {String} name\n * @api private\n */\n\nCommand.prototype.variadicArgNotLast = function(name) {\n  console.error(\"error: variadic arguments must be last '%s'\", name);\n  process.exit(1);\n};\n\n/**\n * Set the program version to `str`.\n *\n * This method auto-registers the \"-V, --version\" flag\n * which will print the version number when passed.\n *\n * You can optionally supply the  flags and description to override the defaults.\n *\n * @param {String} str\n * @param {String} [flags]\n * @param {String} [description]\n * @return {Command} for chaining\n * @api public\n */\n\nCommand.prototype.version = function(str, flags, description) {\n  if (arguments.length === 0) return this._version;\n  this._version = str;\n  flags = flags || '-V, --version';\n  description = description || 'output the version number';\n  var versionOption = new Option(flags, description);\n  this._versionOptionName = versionOption.long.substr(2) || 'version';\n  this.options.push(versionOption);\n  this.on('option:' + this._versionOptionName, function() {\n    process.stdout.write(str + '\\n');\n    process.exit(0);\n  });\n  return this;\n};\n\n/**\n * Set the description to `str`.\n *\n * @param {String} str\n * @param {Object} argsDescription\n * @return {String|Command}\n * @api public\n */\n\nCommand.prototype.description = function(str, argsDescription) {\n  if (arguments.length === 0) return this._description;\n  this._description = str;\n  this._argsDescription = argsDescription;\n  return this;\n};\n\n/**\n * Set an alias for the command\n *\n * @param {String} alias\n * @return {String|Command}\n * @api public\n */\n\nCommand.prototype.alias = function(alias) {\n  var command = this;\n  if (this.commands.length !== 0) {\n    command = this.commands[this.commands.length - 1];\n  }\n\n  if (arguments.length === 0) return command._alias;\n\n  if (alias === command._name) throw new Error('Command alias can\\'t be the same as its name');\n\n  command._alias = alias;\n  return this;\n};\n\n/**\n * Set / get the command usage `str`.\n *\n * @param {String} str\n * @return {String|Command}\n * @api public\n */\n\nCommand.prototype.usage = function(str) {\n  var args = this._args.map(function(arg) {\n    return humanReadableArgName(arg);\n  });\n\n  var usage = '[options]' +\n    (this.commands.length ? ' [command]' : '') +\n    (this._args.length ? ' ' + args.join(' ') : '');\n\n  if (arguments.length === 0) return this._usage || usage;\n  this._usage = str;\n\n  return this;\n};\n\n/**\n * Get or set the name of the command\n *\n * @param {String} str\n * @return {String|Command}\n * @api public\n */\n\nCommand.prototype.name = function(str) {\n  if (arguments.length === 0) return this._name;\n  this._name = str;\n  return this;\n};\n\n/**\n * Return prepared commands.\n *\n * @return {Array}\n * @api private\n */\n\nCommand.prototype.prepareCommands = function() {\n  return this.commands.filter(function(cmd) {\n    return !cmd._noHelp;\n  }).map(function(cmd) {\n    var args = cmd._args.map(function(arg) {\n      return humanReadableArgName(arg);\n    }).join(' ');\n\n    return [\n      cmd._name +\n        (cmd._alias ? '|' + cmd._alias : '') +\n        (cmd.options.length ? ' [options]' : '') +\n        (args ? ' ' + args : ''),\n      cmd._description\n    ];\n  });\n};\n\n/**\n * Return the largest command length.\n *\n * @return {Number}\n * @api private\n */\n\nCommand.prototype.largestCommandLength = function() {\n  var commands = this.prepareCommands();\n  return commands.reduce(function(max, command) {\n    return Math.max(max, command[0].length);\n  }, 0);\n};\n\n/**\n * Return the largest option length.\n *\n * @return {Number}\n * @api private\n */\n\nCommand.prototype.largestOptionLength = function() {\n  var options = [].slice.call(this.options);\n  options.push({\n    flags: this._helpFlags\n  });\n\n  return options.reduce(function(max, option) {\n    return Math.max(max, option.flags.length);\n  }, 0);\n};\n\n/**\n * Return the largest arg length.\n *\n * @return {Number}\n * @api private\n */\n\nCommand.prototype.largestArgLength = function() {\n  return this._args.reduce(function(max, arg) {\n    return Math.max(max, arg.name.length);\n  }, 0);\n};\n\n/**\n * Return the pad width.\n *\n * @return {Number}\n * @api private\n */\n\nCommand.prototype.padWidth = function() {\n  var width = this.largestOptionLength();\n  if (this._argsDescription && this._args.length) {\n    if (this.largestArgLength() > width) {\n      width = this.largestArgLength();\n    }\n  }\n\n  if (this.commands && this.commands.length) {\n    if (this.largestCommandLength() > width) {\n      width = this.largestCommandLength();\n    }\n  }\n\n  return width;\n};\n\n/**\n * Return help for options.\n *\n * @return {String}\n * @api private\n */\n\nCommand.prototype.optionHelp = function() {\n  var width = this.padWidth();\n\n  // Append the help information\n  return this.options.map(function(option) {\n    return pad(option.flags, width) + '  ' + option.description +\n      ((!option.negate && option.defaultValue !== undefined) ? ' (default: ' + JSON.stringify(option.defaultValue) + ')' : '');\n  }).concat([pad(this._helpFlags, width) + '  ' + this._helpDescription])\n    .join('\\n');\n};\n\n/**\n * Return command help documentation.\n *\n * @return {String}\n * @api private\n */\n\nCommand.prototype.commandHelp = function() {\n  if (!this.commands.length) return '';\n\n  var commands = this.prepareCommands();\n  var width = this.padWidth();\n\n  return [\n    'Commands:',\n    commands.map(function(cmd) {\n      var desc = cmd[1] ? '  ' + cmd[1] : '';\n      return (desc ? pad(cmd[0], width) : cmd[0]) + desc;\n    }).join('\\n').replace(/^/gm, '  '),\n    ''\n  ].join('\\n');\n};\n\n/**\n * Return program help documentation.\n *\n * @return {String}\n * @api private\n */\n\nCommand.prototype.helpInformation = function() {\n  var desc = [];\n  if (this._description) {\n    desc = [\n      this._description,\n      ''\n    ];\n\n    var argsDescription = this._argsDescription;\n    if (argsDescription && this._args.length) {\n      var width = this.padWidth();\n      desc.push('Arguments:');\n      desc.push('');\n      this._args.forEach(function(arg) {\n        desc.push('  ' + pad(arg.name, width) + '  ' + argsDescription[arg.name]);\n      });\n      desc.push('');\n    }\n  }\n\n  var cmdName = this._name;\n  if (this._alias) {\n    cmdName = cmdName + '|' + this._alias;\n  }\n  var parentCmdNames = '';\n  for (var parentCmd = this.parent; parentCmd; parentCmd = parentCmd.parent) {\n    parentCmdNames = parentCmd.name() + ' ' + parentCmdNames;\n  }\n  var usage = [\n    'Usage: ' + parentCmdNames + cmdName + ' ' + this.usage(),\n    ''\n  ];\n\n  var cmds = [];\n  var commandHelp = this.commandHelp();\n  if (commandHelp) cmds = [commandHelp];\n\n  var options = [\n    'Options:',\n    '' + this.optionHelp().replace(/^/gm, '  '),\n    ''\n  ];\n\n  return usage\n    .concat(desc)\n    .concat(options)\n    .concat(cmds)\n    .join('\\n');\n};\n\n/**\n * Output help information for this command.\n *\n * When listener(s) are available for the helpLongFlag\n * those callbacks are invoked.\n *\n * @api public\n */\n\nCommand.prototype.outputHelp = function(cb) {\n  if (!cb) {\n    cb = function(passthru) {\n      return passthru;\n    };\n  }\n  const cbOutput = cb(this.helpInformation());\n  if (typeof cbOutput !== 'string' && !Buffer.isBuffer(cbOutput)) {\n    throw new Error('outputHelp callback must return a string or a Buffer');\n  }\n  process.stdout.write(cbOutput);\n  this.emit(this._helpLongFlag);\n};\n\n/**\n * You can pass in flags and a description to override the help\n * flags and help description for your command.\n *\n * @param {String} [flags]\n * @param {String} [description]\n * @return {Command}\n * @api public\n */\n\nCommand.prototype.helpOption = function(flags, description) {\n  this._helpFlags = flags || this._helpFlags;\n  this._helpDescription = description || this._helpDescription;\n\n  var splitFlags = this._helpFlags.split(/[ ,|]+/);\n\n  if (splitFlags.length > 1) this._helpShortFlag = splitFlags.shift();\n\n  this._helpLongFlag = splitFlags.shift();\n\n  return this;\n};\n\n/**\n * Output help information and exit.\n *\n * @param {Function} [cb]\n * @api public\n */\n\nCommand.prototype.help = function(cb) {\n  this.outputHelp(cb);\n  process.exit();\n};\n\n/**\n * Camel-case the given `flag`\n *\n * @param {String} flag\n * @return {String}\n * @api private\n */\n\nfunction camelcase(flag) {\n  return flag.split('-').reduce(function(str, word) {\n    return str + word[0].toUpperCase() + word.slice(1);\n  });\n}\n\n/**\n * Pad `str` to `width`.\n *\n * @param {String} str\n * @param {Number} width\n * @return {String}\n * @api private\n */\n\nfunction pad(str, width) {\n  var len = Math.max(0, width - str.length);\n  return str + Array(len + 1).join(' ');\n}\n\n/**\n * Output help information if necessary\n *\n * @param {Command} command to output help for\n * @param {Array} array of options to search for -h or --help\n * @api private\n */\n\nfunction outputHelpIfNecessary(cmd, options) {\n  options = options || [];\n\n  for (var i = 0; i < options.length; i++) {\n    if (options[i] === cmd._helpLongFlag || options[i] === cmd._helpShortFlag) {\n      cmd.outputHelp();\n      process.exit(0);\n    }\n  }\n}\n\n/**\n * Takes an argument and returns its human readable equivalent for help usage.\n *\n * @param {Object} arg\n * @return {String}\n * @api private\n */\n\nfunction humanReadableArgName(arg) {\n  var nameOutput = arg.name + (arg.variadic === true ? '...' : '');\n\n  return arg.required\n    ? '<' + nameOutput + '>'\n    : '[' + nameOutput + ']';\n}\n\n// for versions before node v0.8 when there weren't `fs.existsSync`\nfunction exists(file) {\n  try {\n    if (fs.statSync(file).isFile()) {\n      return true;\n    }\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Scan arguments and increment port number for inspect calls (to avoid conflicts when spawning new command).\n *\n * @param {string[]} args - array of arguments from node.execArgv\n * @returns {string[]}\n * @api private\n */\n\nfunction incrementNodeInspectorPort(args) {\n  // Testing for these options:\n  //  --inspect[=[host:]port]\n  //  --inspect-brk[=[host:]port]\n  //  --inspect-port=[host:]port\n  return args.map((arg) => {\n    var result = arg;\n    if (arg.indexOf('--inspect') === 0) {\n      var debugOption;\n      var debugHost = '127.0.0.1';\n      var debugPort = '9229';\n      var match;\n      if ((match = arg.match(/^(--inspect(-brk)?)$/)) !== null) {\n        // e.g. --inspect\n        debugOption = match[1];\n      } else if ((match = arg.match(/^(--inspect(-brk|-port)?)=([^:]+)$/)) !== null) {\n        debugOption = match[1];\n        if (/^\\d+$/.test(match[3])) {\n          // e.g. --inspect=1234\n          debugPort = match[3];\n        } else {\n          // e.g. --inspect=localhost\n          debugHost = match[3];\n        }\n      } else if ((match = arg.match(/^(--inspect(-brk|-port)?)=([^:]+):(\\d+)$/)) !== null) {\n        // e.g. --inspect=localhost:1234\n        debugOption = match[1];\n        debugHost = match[3];\n        debugPort = match[4];\n      }\n\n      if (debugOption && debugPort !== '0') {\n        result = `${debugOption}=${debugHost}:${parseInt(debugPort) + 1}`;\n      }\n    }\n    return result;\n  });\n}\n","'use strict';\n\nconst fs = require('fs');\n\nconst LF = 10;\nconst CR = 13;\n\n/**\n * Generator based line reader\n *\n * @param {Number} [fd] The file descriptor\n * @param {Number} [filesize] The size of the file in bytes\n * @param {Number} [bufferSize] The size of the buffer in bytes\n * @param {Number} [position] The position where to start reading the file in bytes\n * @return {Object} The generator object\n */\nfunction* readlines(fd, filesize, bufferSize, position) {\n  if (typeof bufferSize === 'undefined') bufferSize = 64 * 1024;\n  if (typeof position === 'undefined') position = 0;\n\n  let lineBuffer;\n\n  while (position < filesize) {\n    let remaining = filesize - position;\n    if (remaining < bufferSize) bufferSize = remaining;\n\n    let readChunk = new Buffer(bufferSize);\n    let bytesRead = fs.readSync(fd, readChunk, 0, bufferSize, position);\n\n    let curpos = 0;\n    let startpos = 0;\n    let lastbyte = null;\n    let curbyte;\n    while (curpos < bytesRead) {\n      curbyte = readChunk[curpos];\n      // skip LF if last chunk ended in CR\n      if (curbyte === LF && lastbyte !== CR || curbyte === CR && curpos < bytesRead - 1) {\n        yield _concat(lineBuffer, readChunk.slice(startpos, curpos));\n\n        lineBuffer = undefined;\n        startpos = curpos + 1;\n\n        if (curbyte === CR && readChunk[curpos + 1] === LF) {\n          startpos++;\n          curpos++;\n        }\n      } else if (curbyte === CR && curpos >= bytesRead - 1) {\n        lastbyte = curbyte;\n      }\n\n      curpos++;\n    }\n\n    position += bytesRead;\n\n    if (startpos < bytesRead) {\n      lineBuffer = _concat(lineBuffer, readChunk.slice(startpos, bytesRead));\n    }\n  }\n  // dump what ever is left in the buffer\n  if (Buffer.isBuffer(lineBuffer)) yield lineBuffer;\n};\n\n/**\n * Combines two buffers\n *\n * @param {Object} [buffOne] First buffer object\n * @param {Object} [buffTwo] Second buffer object\n * @return {Object} Combined buffer object\n */\nfunction _concat(buffOne, buffTwo) {\n  if (!buffOne) return buffTwo;\n  if (!buffTwo) return buffOne;\n\n  let newLength = buffOne.length + buffTwo.length;\n  return Buffer.concat([buffOne, buffTwo], newLength);\n}\n\n/**\n * Generator based line reader with simplified API\n *\n * @param {string} [filename] Name of input file\n * @return {Object} The generator object\n */\nfunction* fromFile(filename) {\n  const fd = fs.openSync(filename, 'r');\n  const fileSize = fs.statSync(filename).size;\n\n  yield* readlines(fd, fileSize);\n\n  fs.closeSync(fd);\n}\n\nmodule.exports = readlines;\n\nmodule.exports.fromFile = fromFile;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;","module.exports = require(\"events\");","module.exports = require(\"child_process\");","module.exports = require(\"path\");","module.exports = require(\"util\");","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","/**\r\n * nary takes input of a curried function and allows it to be called both as curried and n-ary.\r\n *\r\n * @pure\r\n * @function\r\n * @HindleyMilner nary :: function a -> function b\r\n * @param {function} fn\r\n * @returns {function}\r\n */\r\nexport const nary = fn =>\r\n    (...args) => args.length === 0\r\n        ? fn()\r\n        : args.reduce((accumulator, current) => accumulator(current), fn);","import {typeOf, lengthOf} from \"./utils\";\nimport {nary} from \"./arity\";\n\n/**\n * isEqual :: a -> b -> boolean\n *\n * isEqual output is true if strict equality between a and b is true.\n * isEqual output is always false for comparison of objects and arrays.\n */\nexport const isEqual = nary(a => b => a === b);\n\n/**\n * isNotEqual :: a -> b -> boolean\n *\n * isNotEqual output is true if strict equality between a and b is false.\n * isNotEqual output is always true for comparison of objects and arrays.\n */\nexport const isNotEqual = nary(a => b => a !== b);\n\n/**\n * isTrue :: a -> boolean\n *\n * isTrue output is true if input is true.\n */\nexport const isTrue = isEqual(true);\n\n/**\n * isFalse :: a -> Boolean\n *\n * isFalse output is true if input is false.\n */\nexport const isFalse = isEqual(false);\n\n/**\n * isGreaterThan :: a -> b -> boolean\n *\n * isGreaterThan output is true if b is greater than a.\n */\nexport const isGreaterThan = nary(a => b => b > a);\n\n/**\n * isLessThan :: a -> b -> boolean\n *\n * isLessThan output is true if b is less than a.\n */\nexport const isLessThan = nary(a => b => b < a);\n\n/**\n * isAtLeast :: a -> b -> boolean\n *\n * isAtLeast output is true if b is greater or equal to a.\n */\nexport const isAtLeast = nary(a => b => b >= a);\n\n/**\n * isAtMost :: a -> b -> boolean\n *\n * isAtMost output is true if b is less or equal to a.\n */\nexport const isAtMost = nary(a => b => b <= a);\n\n/**\n * isTypeOf :: a -> b -> boolean\n *\n * isTypeOf output is true if b is a type of a.\n */\nexport const isTypeOf = nary(a => b => isEqual(typeOf(b))(a));\n// is not type of, is not string...\n/**\n * isString :: a -> boolean\n *\n * isString output is true if b is a string.\n */\nexport const isString = isTypeOf('string');\n\n/**\n * isBoolean :: a -> boolean\n *\n * isBoolean output is true if b is a boolean.\n */\nexport const isBoolean = isTypeOf('boolean');\n\n/**\n * isNull :: a -> boolean\n *\n * isNull output is true if b is a null.\n */\nexport const isNull = isEqual(null);\n\n/**\n * isUndefined :: a -> boolean\n *\n * isUndefined output is true if b is an undefined.\n */\nexport const isUndefined = isTypeOf('undefined');\n\n/**\n * isNumber :: a -> boolean\n *\n * isNumber output is true if b is a number.\n */\nexport const isNumber = isTypeOf('number');\n\n/**\n * isObject :: a -> boolean\n *\n * isObject output is true if b is an object, array of null.\n */\nexport const isObject = isTypeOf('object');\n\n/**\n * isArray :: a -> boolean\n *\n * isArray output is true if b is an array.\n */\nexport const isArray = Array.isArray;\n\n/**\n * isFunction :: a -> boolean\n *\n * isFunction output is true if b is a function.\n */\nexport const isFunction = isTypeOf('function');\n\n/**\n * isLength :: (string|array) -> b -> boolean\n *\n * isLength output is true if b is a length of a.\n */\nexport const isLength = nary(a => b => isEqual(lengthOf(b))(a));\n\n/**\n * isNotLength :: (string|array) -> b -> boolean\n *\n * isNotLength output is true if b is not a length of a.\n */\nexport const isNotLength = nary(a => b => !isLength(a)(b));\n\n/**\n * isEmpty :: (string|array) -> boolean\n *\n * isEmpty output is true if input has a length of 0.\n * isEmpty output is always false if input is an object and not an array or a string.\n */\nexport const isEmpty = isLength(0);\n\n/**\n * isNotEmpty :: (string|array) -> boolean\n *\n * isNotEmpty output is true if input does not have a length of 0.\n * isNotEmpty output is always true if input is an object and not an array or a string.\n */\nexport const isNotEmpty = isNotLength(0);\n\n/**\n * isZero :: a -> boolean\n *\n * isZero output is true if a is 0.\n */\nexport const isZero = isEqual(0);\n\n/**\n * isNotZero :: a -> boolean\n *\n * isNotZero output is true if a is not 0.\n */\nexport const isNotZero = isNotEqual(0);\n\n/**\n * isNothing :: a -> boolean\n *\n * isNothing returns true if input is null, undefined or empty string or empty array.\n */\nexport const isNothing = a => isNull(a) || isUndefined(a) || isEmpty(a);\n\n/**\n * isJust :: a -> boolean\n *\n * isJust returns true if input is not null, undefined or empty string or empty array.\n */\nexport const isJust = a => !isNothing(a);","import {isArray, isEqual, isString, isObject, isFunction, isNull, isUndefined, isGreaterThan} from \"./conditional\";\nimport {keysOf, join, map} from \"./list\";\nimport {nary} from \"./arity\";\n\n/**\n * typeOf :: a -> string\n *\n * typeOf outputs type of its input a.\n */\nexport const typeOf = a => typeof a;\n\n/**\n * lengthOf :: (string|array) -> number\n *\n * lenghtOf outputs the length of an input.\n */\nexport const lengthOf = a => a.length;\n\n/**\n * passThrough :: function -> a -> a\n *\n * passThrough output is the same as input a.\n * passThrough executes function passed as first argument.\n */\nexport const passThrough = nary(f => a => {\n  f(a);\n  return a;\n});\n\n/**\n * log :: a -> a\n *\n * log output is the same as input.\n * log causes side effect of console.log.\n */\nexport const log = passThrough(console.log);\n\n/**\n * spy :: a -> a\n *\n * spy output is the same as input.\n * spy causes side effect of console.log.\n */\nexport const spy = passThrough(a => console.log(deepInspect(a)));\n\n/**\n * minusOneToUndefined :: a -> a|boolean\n *\n * minusOneToUndefined output is the same as input or undefined if input is -1.\n */\nexport const minusOneToUndefined = a => isEqual(-1)(a) ? undefined: a;\n\n/**\n * inspectFunction :: (a -> b) -> string\n *\n * inspectFunction outputs name of named function or its conversion to string.\n */\nexport const inspectFunction = f => f.name ? f.name : String(f);\n\n/**\n * inspectArray :: [a] -> string\n *\n * inspectArray maps over input array [a] and outputs string representing it.\n */\nexport const inspectArray = a => `[${join(', ')(map(deepInspect)(a))}]`;\n\n/**\n * inspectString :: a -> string\n *\n * inspectString outputs string representing input.\n */\nexport const inspectString = a => `'${a}'`;\n\n/**\n * inspectObject :: a -> string\n *\n * inspectObject outputs string representing input.\n */\nexport const inspectObject = a =>\n  isFunction(a.inspect)\n    ? a.inspect()\n    : `{${join(', ')(map(join(': '))(map(k => [k, deepInspect(a[k])])(keysOf(a))))}}`\n\n/**\n * deepInspect :: a -> string\n *\n * deepInspect runs recursively over input and outputs string representing the input.\n */\nexport const deepInspect = a =>\n  isUndefined(a)\n    ? 'undefined'\n    : isNull(a)\n      ? 'null'\n      : isFunction(a)\n        ? inspectFunction(a)\n        : isArray(a)\n          ? inspectArray(a)\n          : isObject(a)\n            ? inspectObject(a)\n            : isString(a)\n              ? inspectString(a)\n              : String(a);","import {minusOneToUndefined} from './utils';\nimport {nary} from \"./arity\";\n\n/**\n * reduce :: a -> ((a, b) -> a) -> [b] -> a\n *\n * reduce executes input reducer function that over each member of input array [b] to output single value a.\n *\n * reduce executes functions in reverse order to reduceRight.\n */\nexport const reduce = nary(initial => reducer => list => list.reduce(reducer, initial));\n\n/**\n * reduceRight :: a -> ((a, b) -> a) -> [b] -> a\n *\n * reduceRight executes input reducer function that over each member of input array [b] to output single value a.\n *\n * reduceRight executes functions in reverse order to reduce.\n */\nexport const reduceRight = nary(initial => reducer => list => list.reduceRight(reducer, initial));\n\n/**\n * map :: (a -> b) -> [a] -> [b]\n *\n * map executes input mapper over each member of input array [a] to output new array [b].\n */\nexport const map = nary(mapper => list => list.map(mapper));\n\n/**\n * filter :: (a -> boolean) -> [a] -> [b]\n *\n * filter executes input checker over each member of input array [a] to filter and output filtered new array [b].\n */\nexport const filter = nary(checker => list => list.filter(checker));\n\n/**\n * find :: (a -> boolean) -> [a] -> [b]\n *\n * find executes input checker over each member of input array [a] and outputs the first array member that matches checker or undefined.\n */\nexport const find = nary(checker => list => list.find(checker));\n\n/**\n * findIndex :: (a -> boolean) -> [a] -> [b]\n *\n * findIndex executes input checker over each member of input array [a] and outputs the index of first array member that matches checker or undefined.\n */\nexport const findIndex = nary(checker => list => minusOneToUndefined(list.findIndex(checker)));\n\n/**\n * join :: string -> [a] -> string\n *\n * join outputs a string created by joining input array members with input separator.\n */\nexport const join = nary(separator => list => list.join(separator));\n\n/**\n * keysOf :: object -> [string]\n *\n * keysOf outputs array of string keys of input array or object.\n */\nexport const keysOf = Object.keys;\n\n/**\n * entriesOf :: object -> [[string, a]]\n *\n * entriesOf outputs array of arrays of string keys and raw values of input array or object.\n */\nexport const entriesOf = Object.entries;\n\n/**\n * everyOf :: (a -> boolean) -> [a] -> boolean\n *\n * everyOf outputs true if every element of input array passes input checker function as true.\n */\nexport const everyOf = nary(checker => list => list.every(checker));\n\n/**\n * slice :: number -> number -> [a] -> [a]\n *\n * slice outputs selected array elements as an array based on input range.\n */\nexport const slice = nary(end => start => list => list.slice(start, end));\n\n/**\n * some :: (a -> boolean) -> [a] -> boolean\n *\n * some outputs true if any element of input array passes input checker function as true.\n */\nexport const someOf = nary(checker => list => list.some(checker));","import {reduce, reduceRight} from './list';\nimport {isString, isArray, isObject} from './conditional';\nimport {minusOneToUndefined, passThrough} from './utils';\nimport {nary} from \"./arity\";\n\n/**\n * identity is a function that simply passes its input to its output without changing it.\n *\n * @HindleyMilner identity :: a -> a\n *\n * @pure\n * @param {*} anything\n * @return {*}\n *\n * @example\n * import {identity} from '@7urtle/lambda';\n *\n * identity('anything');\n * // => anything\n */\nexport const identity = anything => anything;\n\n/**\n * compose is a right-to-left function composition\n * where each function receives input and hands over its output to the next function.\n *\n * compose executes functions in reverse order to pipe.\n *\n * compose(f,g)(x) is equivalent to f(g(x)).\n *\n * @HindleyMilner compose :: [(a -> b)] -> a -> (a -> b)\n *\n * @pure\n * @param {function} fns\n * @param {*} anything\n * @return {*}\n *\n * @example\n * import {compose} from '@7urtle/lambda';\n *\n * const addA = a => a + 'A';\n * const addB = a => a + 'B';\n * const addAB = compose(addA, addB);\n *\n * addAB('Order: ');\n * // => Order: BA\n */\nexport const compose = (...fns) => anything => reduceRight(anything)((v, f) => f(v))(fns);\n\n/**\n * pipe output is a left-to-right function composition\n * where each function receives input and hands over its output to the next function.\n *\n * pipe executes functions in reverse order to compose.\n *\n * pipe(f,g)(x) is equivalent to g(f(x)).\n *\n * @HindleyMilner pipe :: [(a -> b)] -> a -> (a -> b)\n *\n * @pure\n * @param {function} fns\n * @param {*} anything\n * @return {*}\n *\n * @example\n * import {pipe} from '@7urtle/lambda';\n *\n * const addA = a => a + 'A';\n * const addB = a => a + 'B';\n * const addAB = pipe(addA, addB);\n *\n * addAB('Order: ');\n * // => Order: AB\n */\nexport const pipe = (...fns) => anything => reduce(anything)((v, f) => f(v))(fns);\n\n/**\n * functorMap maps function over inputted functor outputting resulting functor.\n *\n * You should use functorMap when you want to work with functors using functions\n * and functional composition rather than calling maps.\n *\n * The function can be called both as unary functorMap(fn)(functor) and binary functorMap(fn, functor).\n *\n * @HindleyMilner functorMap :: (a -> b) -> Functor -> Functor\n *\n * @param {function} fn\n * @param {functor} functor\n * @return {functor}\n *\n * @example\n * import {functorMap, Maybe, upperCaseOf} from '@7urtle/lambda';\n *\n * functorMap(upperCaseOf)(Maybe.of('something')); // => Just('SOMETHING')\n *\n * Maybe.of('something').map(upperCaseOf).value === functorMap(upperCaseOf)(Maybe.of('something'));\n *\n * functorMap(upperCaseOf)(Maybe.of('something')) === functorMap(upperCaseOf, Maybe.of('something'));\n */\nexport const functorMap = nary(fn => functor => functor.map(fn));\n\n/**\n * functorFlatMap maps function over inputted functor outputting resulting flattened functor.\n *\n * You should use functorFlatMap when you want to work with functors using functions\n * and functional composition rather than calling flatMaps.\n *\n * The function can be called both as unary functorFlatMap(fn)(functor) and binary functorFlatMap(fn, functor).\n *\n * @HindleyMilner functorFlatMap :: (a -> Functor) -> Functor -> Functor\n *\n * @param {function} fn\n * @param {functor} functor\n * @return {functor}\n *\n * @example\n * import {functorFlatMap, functorMap, Maybe, upperCaseOf} from '@7urtle/lambda';\n *\n * const maybePlus2 = number => Maybe.of(number + 2);\n *\n * functorFlatMap(maybePlus2)(Maybe.of(3)); // => Just(5)\n * functorMap(maybePlus2)(Maybe.of(3)); // => Just(Just(5))\n *\n * Maybe.of(3).flatMap(maybePlus2).value === functorFlatMap(maybePlus2)(Maybe.of(3));\n *\n * functorFlatMap(maybePlus2)(Maybe.of(3)) === functorFlatMap(maybePlus2, Maybe.of(3));\n */\nexport const functorFlatMap = nary(fn => functor => functor.flatMap(fn));\n\n/**\n * liftA2 (a -> b -> c) -> Applicative a -> Applicative b -> Applicative c\n *\n * liftA2 provides point-free way of writing calls over applicative functors and functions with arity 2.\n */\nexport const liftA2 = nary(fn => ap1 => ap2 => ap1.map(fn).ap(ap2));\n\n/**\n * liftA3 (a -> b -> c -> d) -> Applicative a -> Applicative b -> Applicative c -> Applicative d\n *\n * liftA3 provides point-free way of writing calls over applicative functors and functions with arity 3.\n */\nexport const liftA3 = nary(fn => ap1 => ap2 => ap3 => ap1.map(fn).ap(ap2).ap(ap3));\n\n/**\n * concat :: a -> a|boolean\n * \n * contact outputs concatenated inputs of strings, arrays and objects or outputs undefined for other types.\n */\nexport const concat = nary(a => b =>\n  isString(b) || isArray(b)\n    ? b.concat(a)\n    : isObject(b)\n      ? {...b, ...a}\n      : undefined);\n\n/**\n * includes :: a -> b -> boolean\n *\n * includes output is true if b includes a.\n */\nexport const includes = nary(a => b => b.includes(a));\n\n/**\n * indexOf :: a -> b -> number\n * \n * indexOf outputs position of input a within input b or undefined if it is not found.\n */\nexport const indexOf = nary(a => b => minusOneToUndefined(b.indexOf(a)));\n\n/**\n * lastIndexOf :: a -> b -> number\n * \n * lastIndexOf outputs position of input a withing input b looking from the end or it retuns undefined if it is not found.\n */\nexport const lastIndexOf = nary(a => b => minusOneToUndefined(b.lastIndexOf(a)));\n\n/**\n * memoize :: object -> (a -> b) -> a -> b\n *\n * memoize uses input memory to save output of input function and then uses it to lookup result on a repeated run\n */\nexport const memoize = nary(memory => fn => a =>\n  a in memory ? memory[a] : (passThrough(b => memory[a] = b))(fn(a)));","import {minusOneToUndefined} from './utils';\nimport {nary} from \"./arity\";\n\n/**\n * trim :: string -> string\n *\n * trim output is a string without white characters around it.\n */\nexport const trim = string => string.trim();\n\n/**\n * testRegEx :: regex -> string -> boolean\n *\n * testRegEx outputs true if string b passes regular expression a.\n */\nexport const testRegEx = nary(regex => string => regex.test(string));\n\n/**\n * substr :: number -> number -> string -> string\n * \n * substr outputs substring based on provided string, start and limit.\n */\nexport const substr = nary(limit => start => string => string.substr(start, limit));\n\n// TODO: last letter, first letter, beginning, end\n\n/**\n * startsWith :: string -> string -> boolean\n * \n * startsWith outputs true if an input string starts with provided string.\n */\nexport const startsWith = nary(substring => string => string.startsWith(substring));\n\n/**\n * endsWith :: string -> string -> boolean\n * \n * endsWith outputs true if an input string ends with provided string.\n */\nexport const endsWith = nary(substring => string => string.endsWith(substring));\n\n/**\n * repeat :: number -> string -> string\n * \n * repeat outputs new string repeating input string inputed count of times.\n */\nexport const repeat = nary(count => string => string.repeat(count));\n\n/**\n * replace :: string -> string -> string -> string\n * \n * replace outputs new string replacing input substring with input replacement string in input string.\n */\nexport const replace = nary(replacement => substring => string => string.replace(substring, replacement));\n\n/**\n * search :: string/regex -> string -> number\n * \n * search outputs position of input substring or regular expression withing input string or undefined if it is not found.\n */\nexport const search = nary(substring => string => minusOneToUndefined(string.search(substring)));\n\n/**\n * split :: string -> string -> array\n * \n * split outputs and array of an input string split by the input substring.\n */\nexport const split = nary(substring => string => string.split(substring));\n\n/**\n * lowerCaseOf :: string -> string\n * \n * lowerCaseOf ouputs the lower case version of input string.\n */\nexport const lowerCaseOf = string => string.toLowerCase();\n\n/**\n * upperCaseOf :: string -> string\n * \n * upperCaseOf ouputs the upper case version of input string.\n */\nexport const upperCaseOf = string => string.toUpperCase();","import {deepInspect} from \"./utils\";\n\n/**\n * Case.of() outputs instance of Case.\n * Case.of([]).inspect() outputs string Case(a -> b).\n * Case.of([]).match(a) matches input a against map provided as input of Case.\n * Case.of([]).match(a) outputs undefined if no matching case is found.\n * Case.of([]).map(a -> b) composes function over Case match function.\n * Case.of([]).map(a -> Case) outputs Case(Case).\n * Case.of([]).flatMap(a -> Case) outputs Case.\n */\nexport class Case {\n  constructor(x) {\n    this.match = x;\n  }\n\n  inspect() {\n    return `Case(${deepInspect(this.match)})`;\n  }\n\n  static of(x) {\n    return new Case(\n      (x => a => x.get(a) || x.get('_') || undefined)(new Map(x))\n    );\n  }\n\n  map(fn) {\n    return new Case(a => fn(this.match(a)));\n  }\n\n  flatMap(fn) {\n    return new Case(a => this.map(fn).match(a).match(a));\n  }\n}","import {deepInspect} from \"./utils\";\nimport {isNothing} from \"./conditional\";\nimport {nary} from \"./arity\";\n\n/**\n * Maybe.of() outputs instance of Maybe.\n * Maybe.of(a).inspect() outputs string Just(a) or Nothing.\n * Maybe.of(a) outputs Nothing for an input that is null, undefined, an empty string or an empty array.\n * Maybe.of(a) outputs Just for an input a that is not Nothing.\n * Maybe.of(a) outputs Nothing for an input a that is null or undefined.\n * Maybe.of(a).isJust() of an input a outputs true for a value that is Just.\n * Maybe.of(a).isNothing() of an input a outputs true for a value that is Nothing.\n * Maybe.of(a).map(a -> b) executes function over Maybe input a.\n * Maybe.of(a).map(a -> Just) outputs Just(Just).\n * Maybe.of(a).map(a -> b) does not execute over Nothing.\n * Maybe.of(a).flatMap(a -> b) executes function over Maybe input a returns its raw value.\n * Maybe.of(a).flatMap(a -> b) does not execute over Nothing.\n * Maybe.of(a).map(a -> b).ap(Maybe) provides applicative ability to apply functors to each other.\n * Maybe.of(Maybe -> Maybe -> c).ap(Maybe).ap(Maybe) provides applicative interface for a functor of a function.\n */\nexport class Maybe {\n  constructor(x) {\n    this.value = x;\n  }\n\n  static of(x) {\n    return isNothing(x) ? new Nothing(x) : new Just(x) ;\n  }\n}\n\nclass Just extends Maybe {\n  inspect() {\n    return `Just(${deepInspect(this.value)})`;\n  }\n\n  isNothing() {\n    return false;\n  }\n\n  isJust() {\n    return true;\n  }\n\n  map(fn) {\n    return Maybe.of(fn(this.value));\n  }\n\n  flatMap(fn) {\n    return fn(this.value);\n  }\n\n  ap(f) {\n    return f.map(this.value);\n  }\n}\n\nclass Nothing extends Maybe {\n  inspect () {\n    return 'Nothing';\n  }\n\n  isNothing() {\n    return true\n  }\n\n  isJust() {\n    return false;\n  }\n\n  map(fn) {\n    return this;\n  }\n\n  flatMap(fn) {\n    return this;\n  }\n\n  ap(f) {\n    return this;\n  }\n}\n\n/**\n * maybe :: a -> (b -> c) -> Maybe\n *\n * maybe outputs result of a function onJust if input Maybe is Just or outputs input error if input Maybe is Nothing.\n */\nexport const maybe = nary(error => onJust => functorMaybe =>\n  functorMaybe.isNothing()\n    ? error\n    : onJust(functorMaybe.value));","import {deepInspect} from \"./utils\";\nimport {nary} from \"./arity\";\n\n/**\n * Either.of() outputs instance of Either.\n * Either.of(a) outputs instance of Right holding its input value.\n * Either.Right(a) outputs instance of Right holding its input value.\n * Either.Left(a) outputs instance of Left holding its input value.\n * Either.of(a).inspect() outputs string Right(a).\n * Either.Right(a).inspect() outputs string Right(a).\n * Either.Left(a).inspect() outputs string Left(a).\n * Either.of(a).isRight() always outputs true.\n * Either.Left(a).isLeft() outputs false if Either is Left.\n * Either.try(a -> b) outputs Right(b) if no error is thrown.\n * Either.try(a -> b) outputs Left(e.message) if error is thrown.\n * Either.of(a).map(a -> b) executes function over Either input a.\n * Either.of(a).map(a -> Right) outputs Right(Right).\n * Either.Left(a).map(a -> b) does not execute provided function and retains Left input value.\n * Either.of(a).flatMap(a -> b) executes function over Either input a returns its raw value through flatten.\n * Either.Left(a).flatMap(a -> b) does not execute provided function and retains Left input value.\n * Either.of(Either -> Either -> c).ap(Either).ap(Either) provides applicative interface.\n */\nexport class Either {\n  constructor(x) {\n    this.value = x;\n  }\n\n  static of(x) {\n    return new Right(x);\n  }\n\n  static Right(x) {\n    return new Right(x);\n  }\n\n  static Left(x) {\n    return new Left(x);\n  }\n\n  static try(fn) {\n    try {\n      return new Right(fn());\n    } catch(e) {\n      return new Left(e.message);\n    }\n  }\n}\n\nclass Right extends Either {\n  inspect() {\n    return `Right(${deepInspect(this.value)})`;\n  }\n\n  isLeft() {\n    return false;\n  }\n\n  isRight() {\n    return true;\n  }\n\n  map(fn) {\n    return Either.of(fn(this.value));\n  }\n\n  flatMap(fn) {\n    return fn(this.value);\n  }\n\n  ap(f) {\n    return f.map(this.value);\n  }\n}\n\nclass Left extends Either {\n  inspect() {\n    return `Left(${deepInspect(this.value)})`;\n  }\n\n  isLeft() {\n    return true;\n  }\n\n  isRight() {\n    return false;\n  }\n\n  map() {\n    return this;\n  }\n\n  flatMap() {\n    return this;\n  }\n\n  ap() {\n    return this;\n  }\n}\n\n/**\n * either :: (a -> b) -> (b -> c) -> Either\n *\n * either outputs result of a function onRight if input Either is Right or outputs result of a function onLeft if input Either is Left.\n */\nexport const either = nary(onLeft => onRight => functorEither =>\n  functorEither.isLeft()\n    ? onLeft(functorEither.value)\n    : onRight(functorEither.value));","import {deepInspect} from \"./utils\";\n\n/**\n * SyncEffect.of() outputs instance of SyncEffect.\n * SyncEffect.wrap(a) is equal to SyncEffect.of(() -> a).\n * SyncEffect.of(() -> a).inspect() outputs string SyncEffect(a).\n * SyncEffect.of(() -> a).trigger() executes function provided as input of SyncEffect.\n * SyncEffect.of(() -> a).map(b -> c) composes function over SyncEffect input function.\n * SyncEffect.of(() -> a).map(b -> SyncEffect) outputs SyncEffect(SyncEffect).\n * SyncEffect.of(() -> a).flatMap(b -> SyncEffect) outputs SyncEffect.\n * SyncEffect.of(() -> a).map(a -> b).ap(SyncEffect) provides applicative ability to apply functors to each other.\n * SyncEffect.of(SyncEffect -> SyncEffect -> c).ap(SyncEffect).ap(SyncEffect) provides applicative interface for a functor of a function.\n * No input function is executed until trigger is called.\n */\nexport class SyncEffect {\n  constructor(fn) {\n    this.trigger = fn;\n  }\n\n  inspect() {\n    return `SyncEffect(${deepInspect(this.trigger)})`;\n  }\n\n  static of(x) {\n    return new SyncEffect(x);\n  }\n\n  static wrap(x) {\n    return new SyncEffect(() => x);\n  }\n\n  map(fn) {\n    return new SyncEffect(a => fn(this.trigger(a)));\n  }\n\n  flatMap(fn) {\n    return new SyncEffect(() => {\n      return this.map(fn).trigger().trigger();\n    })\n  }\n\n  ap(f) {\n    return this.flatMap(fn => f.map(fn));\n  }\n}","import {deepInspect} from \"./utils\";\n\n/**\n * AsyncEffect.of() outputs instance of AsyncEffect.\n * AsyncEffect.of(() -> a).inspect() outputs string AsyncEffect(a).\n * AsyncEffect.wrap(a) is equal to AsyncEffect.of((_, resolve) -> resolve(a)).\n * AsyncEffect.of((a, b) -> c).promise() outputs JavaScript promise.\n * AsyncEffect.of((a, b) -> c).trigger(d -> e, f -> g) for resolving async function resolves.\n * AsyncEffect.of((a, b) -> c).trigger(d -> e, f -> g) for rejecting async function rejects.\n * AsyncEffect.of((a, b) -> c).trigger(d -> e, f -> g) for synchronous exceptions rejects.\n * AsyncEffect.of((a, b) -> c).map(b -> c) composes function over AsyncEffect input function.\n * AsyncEffect.of((a, b) -> c).map(b -> AsyncEffect) outputs AsyncEffect(AsyncEffect).\n * AsyncEffect.of((a, b) -> c).flatMap(b -> AsyncEffect) outputs AsyncEffect.\n * AsyncEffect.of((a, b) -> c).flatMap(b -> AsyncEffect) handles reject states correctly passing along the initial error.\n * AsyncEffect.of((a, b) -> c).map(a -> b).ap(AsyncEffect) provides applicative ability to apply functors to each other.\n * AsyncEffect.of(AsyncEffect -> AsyncEffect -> c).ap(AsyncEffect).ap(AsyncEffect) provides applicative interface for a functor of a function.\n * No input function is executed until trigger is called.\n */\nexport class AsyncEffect {\n  constructor(fn) {\n    this.trigger = (reject, resolve) => {\n      try { \n        return fn(reject, resolve);\n      } catch(error) {\n        reject(error);\n      }\n    }\n  }\n\n  inspect() {\n    return `AsyncEffect(${deepInspect(this.trigger)})`;\n  }\n\n  static of(x) {\n    return new AsyncEffect(x);\n  }\n\n  static wrap(x) {\n    return new AsyncEffect((_, resolve) => resolve(x));\n  }\n\n  promise() {\n    return new Promise((resolve, reject) => this.trigger(reject, resolve));\n  }\n\n  map(fn) {\n    return new AsyncEffect((reject, resolve) => this.trigger(reject, a => resolve(fn(a))));\n  }\n\n  flatMap(fn) {\n    return new AsyncEffect((reject, resolve) => this.trigger(reject, x => fn(x).trigger(reject, resolve)));\n  }\n\n  ap(f) {\n    return this.flatMap(fn => f.map(fn));\n  }\n}","import {isTrue, passThrough, compose, upperCaseOf} from \"@7urtle/lambda\";\n\nconst createLogger = configuration => getLogger({\n  ...defaultConfiguration,\n  ...configuration\n});\n\nconst defaultDecorator = level => input =>\n  new Date().toLocaleString() + '; ' + upperCaseOf(level) + ': ' + input;\n\nconst defaultConfiguration = {\n  levels: {\n    log: true,\n    debug: true,\n    info: true,\n    warn: true,\n    error: true\n  },\n  library: console,\n  decorator: defaultDecorator\n};\n\nconst getLogger = configuration => ({\n  log: log(configuration)('log'),\n  debug: log(configuration)('debug'),\n  info: log(configuration)('info'),\n  warn: log(configuration)('warn'),\n  error: log(configuration)('error')\n});\n\nconst log = configuration => level =>\n  isTrue(configuration.levels[level])\n    ? passThrough(compose(configuration.library[level], configuration.decorator(level)))\n    : () => null;\n\nexport default createLogger;\n\nexport {\n  defaultDecorator,\n  getLogger,\n  log\n};","import commander from 'commander';\nimport {AsyncEffect, isNothing} from \"@7urtle/lambda\";\nimport fs from 'fs';\n\n/**\n * isDirectoryValid return functor AsyncEffect that throws error if directory based on an argument in commander is invalid and returns the commander.\n * \n * @pure\n * @function\n * @HindleyMilner doestIOArgumentExist :: a -> {b} -> AsyncEffect\n * @param {string} argument \n * @param {object} commander\n * @returns {AsyncEffect}\n * @example\n * isDirectoryValid('input')({input: './valid-directory'});\n * // => AsyncEffect\n */\nconst isDirectoryValid = argument => commander =>\n    AsyncEffect\n    .of((reject, resolve) =>\n        isNothing(commander[argument])\n        ? reject(`--${argument} is a required argument. Try: $ documenter --input ./your/input --output ./your/output`)\n        : !fs.statSync(commander[argument]).isDirectory()\n          ? reject(`--${argument} ${commander[argument]} is not a directory.`)\n          : resolve(commander)\n    );\n\n/**\n * IOCommanderAsyncEffect reads and validates --input and --output values from a commandline.\n * \n * @functor\n * @example\n * IOCommanderAsyncEffect.trigger(\n *   error => console.error(error),\n *   result => console.log(`input is ${result.input}, output is ${result.output}`)\n * );\n * // => input is ./existing-input/ , output is ./existing-output/\n */\nconst IOCommanderAsyncEffect =\n    AsyncEffect\n    .of((reject, resolve) => resolve(new commander.Command()))\n    .map(a => a.version('0.0.1', '-v, --version', 'output the current version'))\n    .map(a => a.option('-i, --input <input>', 'input file or directory'))\n    .map(a => a.option('-o, --output <output>', 'output directory'))\n    .map(a => a.parse(process.argv))\n    .flatMap(isDirectoryValid('input'))\n    .flatMap(isDirectoryValid('output'))\n    .map(a => ({input: a.input, output: a.output}));\n\nexport default IOCommanderAsyncEffect;\nexport {\n    isDirectoryValid,\n    IOCommanderAsyncEffect\n};","import {filter, endsWith, reduce, trim, Case, isEqual, lowerCaseOf, map,\n    startsWith, lengthOf, substr, search, concat, SyncEffect, AsyncEffect} from \"@7urtle/lambda\";\nimport readlines from 'gen-readlines';\nimport fs from \"fs\";\n\nconst states = {\n    CODE: 'CODE',\n    START: 'START',\n    DESCRIPTION: 'DESCRIPTION',\n    TAG: 'TAG',\n    EXAMPLE: 'EXAMPLE',\n    NAME: 'NAME',\n    END: 'END'\n};\n\n/**\n * getNameFromLine returns the name of class or a function from a line of source file.\n * \n * @pure\n * @function\n * @HindleyMilner getNameFromLine :: a -> b\n * @param {number} length\n * @param {string} line\n * @returns {string}\n * @example\n * getNameFromLine(6)('const lambda = a => b => a + b');\n * // => lambda\n */\nconst getNameFromLine = length => line =>\n    (\n        contents => substr(search(' ')(contents))(0)(contents)\n    )(substr(lengthOf(line))(length)(line));\n\n/**\n * processLineNameState returns object with a new state and the name and type of a documented function based on a source file line.\n * \n * @pure\n * @function\n * @HindleyMilner processLineNameState :: a -> {b}\n * @param {string} line\n * @returns {object}\n * @example\n * processLineNameState('const lambda = a => b => a + b');\n * // => {state:'END', contents: {name: 'lambda', type: 'function'}}\n */\nconst processLineNameState = line =>\n    (line =>\n        (line =>\n            startsWith('const ')(line)\n            ? endsWith(' = {')(line)\n              ? {\n                    state: states.END,\n                    contents: {\n                        name: getNameFromLine(6)(line),\n                        type: 'object'\n                    }\n                }\n              : {\n                    state: states.END,\n                    contents: {\n                        name: getNameFromLine(6)(line),\n                        type: 'expression'\n                    }\n                }\n            : startsWith('class ')(line)\n            ? {\n                state: states.END,\n                contents: {\n                    name: getNameFromLine(6)(line),\n                    type: 'class'\n                }\n            }\n            : startsWith('function ')(line)\n            ? {\n                state: states.END,\n                contents: {\n                    name: getNameFromLine(9)(line),\n                    type: 'function'\n                }\n            }\n            : {\n                state: states.END,\n                contents: {\n                    name: 'unknown',\n                    type: 'unknown'\n                }\n            }\n        )\n        (startsWith('export ')(line) ? substr(lengthOf(line))(7)(line) : line)\n    )\n    (trim(line));\n\n/**\n * getDocumentationLineContents gets line of a documentation text from an input line string.\n * \n * @pure\n * @function\n * @HindleyMilner getDocumentationLineContents :: a -> b\n * @param {string} line\n * @returns {string} \n * @example\n * getDocumentationLineContents('* some description ')\n * // => some description\n */\nconst getDocumentationLineContents = line =>\n    (length => length > 1 ? (substr(length)(2)(line)) : '')\n    (lengthOf(line));\n\n/**\n * processLineCodeState changes state to description if it finds a start of a documentation comment returning Either.\n * \n * @pure\n * @function\n * @HindleyMilner processLineCodeState :: a -> {b}\n * @param {string} line \n * @returns {object}\n * @example\n * processLineCodeState('/**');\n * // => {state: DESCRIPTION}\n */\nconst processLineCodeState = line =>\n    isEqual('/**')(line)\n        ? {state: states.DESCRIPTION, newDocumentationBlock: true}\n        : {state: states.CODE};\n\n/**\n * positionToWhiteSpaceOrStringLength returns the position of the first white space or a string length.\n * \n * @pure\n * @function\n * @HindleyMilner positionToWhiteSpaceOrStringLength :: a -> b\n * @param {string} contents\n * @returns {number}\n * @example\n * positionToWhiteSpaceOrStringLength('@tag label');\n * // => 4\n */\nconst positionToWhiteSpaceOrStringLength = contents => (result => isEqual(result)(undefined) ? lengthOf(contents) : result)(search(' ')(contents));\n\n/**\n * getTag returns the tag name from a tag documentation.\n * \n * @pure\n * @function\n * @HindleyMilner getTag :: a -> b\n * @param {string} contents\n * @returns {string}\n * @example\n * getTag('@tag label')\n * // => tag\n */\nconst getTag = contents => substr(positionToWhiteSpaceOrStringLength(contents) -1)(1)(contents);\n\n/**\n * getTagContents returns the tag value from a tag documentation.\n * \n * @pure\n * @function\n * @HindleyMilner getTagContents :: a -> b\n * @param {string} contents\n * @returns {string}\n * @example\n * getTagContents('@tag label')\n * // => label\n * getTagContents('@example')\n * // => true\n */\nconst getTagContents = contents => isEqual(search(' ')(contents))(undefined) ? 'true' : trim(substr(lengthOf(contents))(positionToWhiteSpaceOrStringLength(contents))(contents));\n\n/**\n * processTag returns documentation of a tag line.\n * \n * @pure\n * @function\n * @HindleyMilner processTag :: a -> b -> {c}\n * @param {string} tagContents \n * @param {string} tag\n * @returns {object}\n * @example\n * processTag('tag')('label');\n * // => {\n *   state: \"TAG\",\n *     contents: {\n *       tags: [{\n *         something: \"else\"\n *       }]\n *    }\n * }\n */\nconst processTag = tagContents => tag =>\n    isEqual(lowerCaseOf(tag))('example')\n        ? {state: states.EXAMPLE}\n        : {\n            state: states.TAG,\n            contents: {\n                tags: [{\n                    [tag]: tagContents\n                }]\n            }\n        };\n\n/**\n * processExampleOrTag returns text or a tag depending on found content.\n * \n * @pure\n * @function\n * @HindleyMilner processTextOrTag :: a -> {b}\n * @param {string} contents\n * @returns {object}\n * @example\n * processTextOrTag('example')('some example')\n * // => {\n *   contents: {\n *     example: ['some example']\n *   }\n * }\n * \n * processTextOrTag('example')(('@something else')\n * // => {\n *   state: \"TAG\",\n *     contents: {\n *       tags: {\n *         something: \"else\"\n *       }\n *    }\n * }\n */\nconst processTextOrTag = type => contents =>\n    startsWith('@')(contents)\n        ? (lengthOf(contents) > 2 ? processTag(getTagContents(contents))(getTag(contents)) : {})\n        //: lengthOf(contents) > 1 ? {contents:{[type]:[contents]}} : {};\n        : lengthOf(contents) > 1\n            ? {contents:{[type]:[contents]}}\n            : isEqual(type)('example') ? {contents:{[type]:[contents]}} : {};\n\n/**\n * processLineTextState returns text or a tag depending on found content.\n * \n * @pure\n * @function\n * @HindleyMilner processLineTextState :: a -> {b}\n * @param {string} contents\n * @returns {object}\n * @example\n * processLineTextState('example')('* some example')\n * // => {\n *   contents: {\n *     example: ['some example']\n *   }\n * }\n * \n * processLineTextState('example')('* @something else')\n * // => {\n *   state: \"TAG\",\n *     contents: {\n *       tags: {\n *         something: \"else\"\n *       }\n *    }\n * }\n */\nconst processLineTextState = type => line =>\n    startsWith('*')(line)\n        ? isEqual('*/')(line)\n            ? {state: states.NAME}\n            : processTextOrTag(type)(getDocumentationLineContents(line))\n        : {} // lines not starting with a star are ignored\n\n/**\n * processLineBasedOnState accepts the current state and returns the correct function for line processing.\n * \n * @pure\n * @function\n * @HindleyMilner processLineBasedOnState :: a -> (b -> c)\n * @param {string} state \n * @returns {function}\n * \n * @example\n * processLineBasedOnState('CODE');\n * // => processLineCodeState\n */\nconst processLineBasedOnState = state =>\n    Case\n    .of([\n        [states.CODE, processLineCodeState],\n        [states.START, processLineTextState('description')],\n        [states.DESCRIPTION, processLineTextState('description')],\n        [states.TAG, processLineTextState('description')],\n        [states.EXAMPLE, processLineTextState('example')],\n        [states.NAME, processLineNameState],\n        [states.END, processLineCodeState],\n    ])\n    .match(state);\n\n/**\n * concatContentItem concatenates items for object contents of accumulator.\n * \n * @pure\n * @function\n * @HindleyMilner concatContentItem :: a -> {b} -> {c} -> {d}\n * @param {string} label\n * @param {object} processedLines\n * @param {object} newData\n * @returns {any}\n * @example\n * concatContentItem('item')({accumulator:{item: 'a'}})({contents:{item: 'b'}});\n * // => 'ab'\n */\nconst concatContentItem = label => processedLines => newData =>\n    (newData.contents && newData.contents[label])\n    ? concat(newData.contents[label])(processedLines.accumulator[label])\n    : processedLines.accumulator[label];\n\n/**\n * mergeDocumentationContents merges processedLines and new data from a new source line.\n * \n * @pure\n * @function\n * @HindleyMilner mergeDocumentationContents :: {a} -> {b} -> {a}\n * @param {object} processedLines \n * @param {object} newData\n * @returns {object}\n * @example\n * mergeDocumentationContents({\n *      state: 'DESCRIPTION',\n *      contents: [],\n *      accumulator: {\n *          description: ['line 1'],\n *          tags: [],\n *          example: []\n *      }\n *  })({\n *      state: 'DESCRIPTION',\n *      contents: {\n *          description: ['line 2']\n *      }\n *  });\n * \n * // => {\n *      state: 'DESCRIPTION',\n *      contents: [],\n *      accumulator: {\n *          description: ['line 1', 'line 2'],\n *          tags: [],\n *          example: []\n *      }\n *  }\n */\nconst mergeDocumentationContents = processedLines => newData =>\n    (isEqual(newData.state)(states.END))\n    ? ({ // at the end of every code we move documentation to contents array and clear accumulator\n        ...processedLines,\n        state: states.END,\n        contents: [\n            ...processedLines.contents,\n            {\n                ...processedLines.accumulator,\n                name: newData.contents.name,\n                type: newData.contents.type\n            }\n        ],\n        accumulator: {\n            description: [],\n            tags: [],\n            example: []\n        }\n    })\n    : ({ // with new lines of documentation we add them to accumulator\n        ...processedLines,\n        state: (newData.state) ? newData.state : processedLines.state,\n        accumulator: {\n            description: concatContentItem('description')(processedLines)(newData),\n            tags: concatContentItem('tags')(processedLines)(newData),\n            example: concatContentItem('example')(processedLines)(newData)\n        }\n    });\n\n/**\n * processLine merges proccessed lines with data from a new line.\n * \n * @pure\n * @function\n * @HindleyMilner processLine :: {a} -> b -> {a}\n * @param {object} processedLines \n * @param {string} line\n * @returns {object}\n * @example\n * processLine({\n *      state: 'DESCRIPTION',\n *      contents: [],\n *      accumulator: {\n *          description: ['line 1'],\n *          tags: [],\n *          example: []\n *      }\n *   }, {toString: () => 'some description'});\n * // =>\n * {\n *   state: 'DESCRIPTION',\n *   contents: [],\n *   accumulator: {\n *     description: ['line 1', 'line 2'],\n *     tags: [],\n *     example: []\n *   }\n * }\n */\nconst processLine = (processedLines, line) =>\n    mergeDocumentationContents(processedLines)(processLineBasedOnState(processedLines.state)(trim(line.toString())));\n\n/**\n * getJSFilesInADirectoryAsyncEffect returns a AsyncEffect functor that provides a configuration object\n * with input, output, and an array of all .js files in a given path.\n * \n * @pure\n * @HindleyMilner getJSFilesInADirectoryAsyncEffect :: {a} -> {AsyncEffect}\n * @param {object} configuration\n * @returns {AsyncEffect}\n * @example\n * getJSFilesInADirectoryAsyncEffect({input: './input/', output: './output/'}).trigger(\n *   error => console.error(error),\n *   result => console.log(result) // ==> {input: './input/', output: './output/', files: ['./input/Case.js','./input/core.js']}\n * )\n */\nconst getJSFilesInADirectoryAsyncEffect = configuration =>\n    AsyncEffect\n    .of((reject, resolve) =>\n        (path =>\n            resolve({\n                input: path,\n                output: endsWith('/')(configuration.output) ? configuration.output : configuration.output + '/',\n                files: map(file => path + file)\n                          (filter(endsWith('.js'))\n                          (fs.readdirSync(path)))\n            })\n        )(endsWith('/')(configuration.input) ? configuration.input : configuration.input + '/')\n    );\n\n/**\n * FileLinesGeneratorSyncEffect returns a SyncEffect Functor of a generator that provides all lines of a file.\n * \n * @pure\n * @functor {SyncEffect}\n * @example\n * FileLinesGeneratorSyncEffect.trigger('./tests/testable/core.js');\n * // => Generator {}\n */\nconst FileLinesGeneratorSyncEffect = SyncEffect.of(path => fs.existsSync(path) ? readlines.fromFile(path) : function* (){}());\n\n/**\n * processOneFile recursively reads one file and returns an object with processed documentation.\n * @pure\n * @function\n * @HindleyMilner processOneFile :: {a} -> {b} -> {a}\n * @param {object} documentation\n * @param {object} documentation\n * @returns {object}\n * @example\n * processOneFile({\n *      state: 'CODE',\n *      contents: [],\n *      accumulator: {\n *          description: [],\n *          tags: [],\n *          example: []\n *      }\n * })(['line']);\n */\nconst processOneFile = documentation => generator =>\n    (item =>\n        item.done\n        ? documentation\n        : processOneFile(processLine(documentation, item.value))(generator)\n    )\n    (generator.next());\n\n/**\n * getCodeReaderAsyncEffect returns a AsyncEffect functor that provides an object of configuration\n * and documentation of all .js files in a given input path.\n *\n * @pure\n * @HindleyMilner getCodeReaderAsyncEffect :: {a} -> {AsyncEffect}\n * @param {object} configuration\n * @returns {AsyncEffect}\n * @example\n * getCodeReaderAsyncEffect({input: './input/', output: './output/'}).trigger(\n *   error => console.error(error),\n *   result => console.log(result)\n *   // ==> {\n *      input: './input/', output: './output/',\n *      files: ['./input/Case.js','./input/core.js'],\n *      documentation: {...}\n *   }\n * )\n */\nconst getCodeReaderAsyncEffect = configuration =>\n    getJSFilesInADirectoryAsyncEffect(configuration)\n    .map(configurationWithFiles => ({\n        ...configurationWithFiles,\n        documentation: reduce\n            ([])\n            ((documentation, file) => [\n                ...documentation,\n                {\n                    file: file,\n                    contents: processOneFile({\n                        state: 'CODE',\n                        contents: [],\n                        accumulator: {\n                            description: [],\n                            tags: [],\n                            example: []\n                        }\n                    })(FileLinesGeneratorSyncEffect.trigger(file)).contents\n                }\n            ])\n            (configurationWithFiles.files)\n    }));\n\nexport {\n    processLineCodeState,\n    getDocumentationLineContents,\n    positionToWhiteSpaceOrStringLength,\n    getTag,\n    getTagContents,\n    processTag,\n    processTextOrTag,\n    processLineTextState,\n    processLineBasedOnState,\n    processLine,\n    processLineNameState,\n    getNameFromLine,\n    concatContentItem,\n    mergeDocumentationContents,\n    getJSFilesInADirectoryAsyncEffect,\n    FileLinesGeneratorSyncEffect,\n    processOneFile,\n    getCodeReaderAsyncEffect\n};","import createLogger from \"@7urtle/logger\";\n\nimport IOCommanderAsyncEffect from './IOCommanderAsyncEffect';\nimport {getCodeReaderAsyncEffect} from './CodeReaderAsyncEffect';\nimport {getDocumentationWriterAsyncEffect} from './DocumentationWriterAsyncEffect';\n\nconst logger = createLogger();\n\n/**\n * Executes the program that reads --input and --output from commandline and generates documentation object that is save as JSON.\n */\nIOCommanderAsyncEffect\n.flatMap(getCodeReaderAsyncEffect)\n.flatMap(getDocumentationWriterAsyncEffect)\n.trigger(\n  logger.error,\n  configuration => logger.info(`Documentation from ${configuration.input} was successfuly saved to ${configuration.output}.`) || process.exit(0)\n);","import {AsyncEffect} from \"@7urtle/lambda\";\nimport fs from \"fs\";\n\n/**\n * getDocumentationWriterAsyncEffect takes configuration object to return AsyncEffect functor\n * of a documentation writer.\n *\n * @pure\n * @HindleyMilner getDocumentationWriter :: a -> {b} -> {AsyncEffect}\n * @param {object} configuration\n * @returns {AsyncEffect}\n * @example\n * getDocumentationWriterAsyncEffect(configuration).trigger(\n *   error => console.error(error),\n *   result => console.info('Documentation is saved')\n * );\n * // => 'Documentation is saved'\n */\nconst getDocumentationWriterAsyncEffect = configuration =>\n    AsyncEffect.of(\n        async (reject, resolve) =>\n            fs.writeFile(\n                configuration.output + \"documentation.json\",\n                JSON.stringify(configuration.documentation),\n                'utf8',\n                error => error\n                    ? reject(`There was an error writing into \"${configuration.output}documentation.json\" with exception: \"${error}\".`)\n                    : resolve(configuration)\n            )\n    );\n\nexport {\n    getDocumentationWriterAsyncEffect\n};"],"sourceRoot":""}